State 17 conflicts: 10 shift/reduce


Grammar

    0 $accept: program END

    1 program: blocks

    2 blocks: blocks block
    3       | block
    4       | eols block

    5 block: elements
    6      | func_block

    7 func_block: FUNC IDENTIFIER LEFT_PAREN identifiers RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols
    8           | FUNC IDENTIFIER LEFT_PAREN identifiers RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE END
    9           | FUNC IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols
   10           | FUNC IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE END

   11 elements: elements element
   12         | element

   13 element: element_content eols
   14        | element_content END

   15 element_content: declaration
   16                | input_output
   17                | subst_calc
   18                | subst_calc_2
   19                | if_stmt
   20                | WHILE LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   21                | for_stmt
   22                | BREAK
   23                | CONTINUE
   24                | RETURN expression
   25                | RETURN STRING
   26                | func_exe

   27 declaration: IDENT_DECL identifiers
   28            | declaration_subst_calc

   29 declaration_subst_calc: IDENT_DECL subst_calc

   30 input_output: INPUT identifiers
   31             | outputs

   32 outputs: outputs OUTPUT expression
   33        | outputs OUTPUT STRING
   34        | OUTPUT expression
   35        | OUTPUT STRING

   36 identifiers: identifiers COMMA IDENTIFIER
   37            | identifiers COMMA IDENTIFIER DOT INT
   38            | IDENTIFIER
   39            | IDENTIFIER DOT INT

   40 subst_calc: identifiers SUBST expression
   41           | identifiers SUBST STRING

   42 subst_calc_2: identifiers ADD_SUBST expression
   43             | identifiers SUBT_SUBST expression
   44             | identifiers MULT_SUBST expression
   45             | identifiers DIV_SUBST expression
   46             | identifiers MOD_SUBST expression

   47 expression: expression PLUS expression
   48           | expression MINUS expression
   49           | expression MULT expression
   50           | expression DIV expression
   51           | expression MOD expression
   52           | expression EQUAL expression
   53           | expression NOT_EQUAL expression
   54           | expression MORE_EQUAL expression
   55           | expression LESS_EQUAL expression
   56           | expression MORE expression
   57           | expression LESS expression
   58           | expression AND expression
   59           | expression OR expression
   60           | monomial
   61           | MINUS expression
   62           | LEFT_PAREN expression RIGHT_PAREN

   63 monomial: INT
   64         | FLOAT
   65         | IDENTIFIER
   66         | IDENTIFIER DOT INT
   67         | func_exe

   68 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   69        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   70        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACKET
   71        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET

   72 else_if_stmts: else_if_stmts RIGHT_BRACE EOL else_if_stmt
   73              | else_if_stmt

   74 else_if_stmt: ELSE IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements

   75 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   76         | FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   77         | FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   78         | FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   79         | FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   80         | FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

   81 func_exe: IDENTIFIER LEFT_PAREN identifiers RIGHT_PAREN
   82         | IDENTIFIER LEFT_PAREN RIGHT_PAREN

   83 eols: eols EOL
   84     | EOL


Terminals, with rules where they appear

END (0) 0 8 10 14
error (256)
INT (258) 37 39 63 66
FLOAT (259) 64
STRING (260) 25 33 35 41
IDENTIFIER (261) 7 8 9 10 36 37 38 39 65 66 81 82
EQUAL (262) 52
NOT_EQUAL (263) 53
MORE_EQUAL (264) 54
LESS_EQUAL (265) 55
MORE (266) 56
LESS (267) 57
SUBST (268) 40 41
PLUS (269) 47
MINUS (270) 48 61
MULT (271) 49
DIV (272) 50
AND (273) 58
MOD (274) 51
OR (275) 59
ADD_SUBST (276) 42
SUBT_SUBST (277) 43
MULT_SUBST (278) 44
DIV_SUBST (279) 45
MOD_SUBST (280) 46
RETURN (281) 24 25
DOT (282) 37 39 66
COMMA (283) 36 37 75 76 77 78 79 80
INPUT (284) 30
OUTPUT (285) 32 33 34 35
IF (286) 68 69 70 71 74
ELSE (287) 69 71 74
FOR (288) 75 76 77 78 79 80
WHILE (289) 20
BREAK (290) 22
CONTINUE (291) 23
FUNC (292) 7 8 9 10
LEFT_PAREN (293) 7 8 9 10 20 62 68 69 70 71 74 75 76 77 78 79 80 81
    82
RIGHT_PAREN (294) 7 8 9 10 20 62 68 69 70 71 74 75 76 77 78 79 80 81
    82
LEFT_BRACE (295) 7 8 9 10 20 68 69 70 71 74 75 76 77 78 79 80
RIGHT_BRACE (296) 7 8 9 10 20 69 70 71 72 75 76 77 78 79 80
RIGHT_BRACKET (297) 68 69 70 71
IDENT_DECL (298) 27 29
EOL (299) 7 8 9 10 20 68 69 70 71 72 74 75 76 77 78 79 80 83 84
UMINUS (300)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
blocks (48)
    on left: 2 3 4, on right: 1 2
block (49)
    on left: 5 6, on right: 2 3 4
func_block (50)
    on left: 7 8 9 10, on right: 6
elements (51)
    on left: 11 12, on right: 5 7 8 9 10 11 20 68 69 70 71 74 75 76
    77 78 79 80
element (52)
    on left: 13 14, on right: 11 12
element_content (53)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26, on right: 13 14
declaration (54)
    on left: 27 28, on right: 15
declaration_subst_calc (55)
    on left: 29, on right: 28 75 76
input_output (56)
    on left: 30 31, on right: 16
outputs (57)
    on left: 32 33 34 35, on right: 31 32 33
identifiers (58)
    on left: 36 37 38 39, on right: 7 8 27 30 36 37 40 41 42 43 44
    45 46 81
subst_calc (59)
    on left: 40 41, on right: 17 29 75 77 78 79
subst_calc_2 (60)
    on left: 42 43 44 45 46, on right: 18 76 78 79 80
expression (61)
    on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62, on right:
    20 24 32 34 40 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57
    58 59 61 62 68 69 70 71 74 75 76 77 78 79 80
monomial (62)
    on left: 63 64 65 66 67, on right: 60
if_stmt (63)
    on left: 68 69 70 71, on right: 19
else_if_stmts (64)
    on left: 72 73, on right: 70 71 72
else_if_stmt (65)
    on left: 74, on right: 72 73
for_stmt (66)
    on left: 75 76 77 78 79 80, on right: 21
func_exe (67)
    on left: 81 82, on right: 26 67
eols (68)
    on left: 83 84, on right: 4 7 9 13 83


State 0

    0 $accept: . program END

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    FUNC        shift, and go to state 10
    IDENT_DECL  shift, and go to state 11
    EOL         shift, and go to state 12

    program                 go to state 13
    blocks                  go to state 14
    block                   go to state 15
    func_block              go to state 16
    elements                go to state 17
    element                 go to state 18
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29
    eols                    go to state 30


State 1

   38 identifiers: IDENTIFIER .
   39            | IDENTIFIER . DOT INT
   81 func_exe: IDENTIFIER . LEFT_PAREN identifiers RIGHT_PAREN
   82         | IDENTIFIER . LEFT_PAREN RIGHT_PAREN

    DOT         shift, and go to state 31
    LEFT_PAREN  shift, and go to state 32

    $default  reduce using rule 38 (identifiers)


State 2

   24 element_content: RETURN . expression
   25                | RETURN . STRING

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    STRING      shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 39
    monomial    go to state 40
    func_exe    go to state 41


State 3

   30 input_output: INPUT . identifiers

    IDENTIFIER  shift, and go to state 42

    identifiers  go to state 43


State 4

   34 outputs: OUTPUT . expression
   35        | OUTPUT . STRING

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 45
    monomial    go to state 40
    func_exe    go to state 41


State 5

   68 if_stmt: IF . LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   69        | IF . LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   70        | IF . LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACKET
   71        | IF . LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET

    LEFT_PAREN  shift, and go to state 46


State 6

   75 for_stmt: FOR . LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   76         | FOR . LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   77         | FOR . LEFT_PAREN subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   78         | FOR . LEFT_PAREN subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   79         | FOR . LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   80         | FOR . LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    LEFT_PAREN  shift, and go to state 47


State 7

   20 element_content: WHILE . LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    LEFT_PAREN  shift, and go to state 48


State 8

   22 element_content: BREAK .

    $default  reduce using rule 22 (element_content)


State 9

   23 element_content: CONTINUE .

    $default  reduce using rule 23 (element_content)


State 10

    7 func_block: FUNC . IDENTIFIER LEFT_PAREN identifiers RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols
    8           | FUNC . IDENTIFIER LEFT_PAREN identifiers RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE END
    9           | FUNC . IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols
   10           | FUNC . IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE END

    IDENTIFIER  shift, and go to state 49


State 11

   27 declaration: IDENT_DECL . identifiers
   29 declaration_subst_calc: IDENT_DECL . subst_calc

    IDENTIFIER  shift, and go to state 42

    identifiers  go to state 50
    subst_calc   go to state 51


State 12

   84 eols: EOL .

    $default  reduce using rule 84 (eols)


State 13

    0 $accept: program . END

    END  shift, and go to state 52


State 14

    1 program: blocks .
    2 blocks: blocks . block

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    FUNC        shift, and go to state 10
    IDENT_DECL  shift, and go to state 11

    $default  reduce using rule 1 (program)

    block                   go to state 53
    func_block              go to state 16
    elements                go to state 17
    element                 go to state 18
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 15

    3 blocks: block .

    $default  reduce using rule 3 (blocks)


State 16

    6 block: func_block .

    $default  reduce using rule 6 (block)


State 17

    5 block: elements .
   11 elements: elements . element

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    IDENT_DECL  shift, and go to state 11

    IDENTIFIER  [reduce using rule 5 (block)]
    RETURN      [reduce using rule 5 (block)]
    INPUT       [reduce using rule 5 (block)]
    OUTPUT      [reduce using rule 5 (block)]
    IF          [reduce using rule 5 (block)]
    FOR         [reduce using rule 5 (block)]
    WHILE       [reduce using rule 5 (block)]
    BREAK       [reduce using rule 5 (block)]
    CONTINUE    [reduce using rule 5 (block)]
    IDENT_DECL  [reduce using rule 5 (block)]
    $default    reduce using rule 5 (block)

    element                 go to state 54
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 18

   12 elements: element .

    $default  reduce using rule 12 (elements)


State 19

   13 element: element_content . eols
   14        | element_content . END

    END  shift, and go to state 55
    EOL  shift, and go to state 12

    eols  go to state 56


State 20

   15 element_content: declaration .

    $default  reduce using rule 15 (element_content)


State 21

   28 declaration: declaration_subst_calc .

    $default  reduce using rule 28 (declaration)


State 22

   16 element_content: input_output .

    $default  reduce using rule 16 (element_content)


State 23

   31 input_output: outputs .
   32 outputs: outputs . OUTPUT expression
   33        | outputs . OUTPUT STRING

    OUTPUT  shift, and go to state 57

    $default  reduce using rule 31 (input_output)


State 24

   36 identifiers: identifiers . COMMA IDENTIFIER
   37            | identifiers . COMMA IDENTIFIER DOT INT
   40 subst_calc: identifiers . SUBST expression
   41           | identifiers . SUBST STRING
   42 subst_calc_2: identifiers . ADD_SUBST expression
   43             | identifiers . SUBT_SUBST expression
   44             | identifiers . MULT_SUBST expression
   45             | identifiers . DIV_SUBST expression
   46             | identifiers . MOD_SUBST expression

    SUBST       shift, and go to state 58
    ADD_SUBST   shift, and go to state 59
    SUBT_SUBST  shift, and go to state 60
    MULT_SUBST  shift, and go to state 61
    DIV_SUBST   shift, and go to state 62
    MOD_SUBST   shift, and go to state 63
    COMMA       shift, and go to state 64


State 25

   17 element_content: subst_calc .

    $default  reduce using rule 17 (element_content)


State 26

   18 element_content: subst_calc_2 .

    $default  reduce using rule 18 (element_content)


State 27

   19 element_content: if_stmt .

    $default  reduce using rule 19 (element_content)


State 28

   21 element_content: for_stmt .

    $default  reduce using rule 21 (element_content)


State 29

   26 element_content: func_exe .

    $default  reduce using rule 26 (element_content)


State 30

    4 blocks: eols . block
   83 eols: eols . EOL

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    FUNC        shift, and go to state 10
    IDENT_DECL  shift, and go to state 11
    EOL         shift, and go to state 65

    block                   go to state 66
    func_block              go to state 16
    elements                go to state 17
    element                 go to state 18
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 31

   39 identifiers: IDENTIFIER DOT . INT

    INT  shift, and go to state 67


State 32

   81 func_exe: IDENTIFIER LEFT_PAREN . identifiers RIGHT_PAREN
   82         | IDENTIFIER LEFT_PAREN . RIGHT_PAREN

    IDENTIFIER   shift, and go to state 42
    RIGHT_PAREN  shift, and go to state 68

    identifiers  go to state 69


State 33

   63 monomial: INT .

    $default  reduce using rule 63 (monomial)


State 34

   64 monomial: FLOAT .

    $default  reduce using rule 64 (monomial)


State 35

   25 element_content: RETURN STRING .

    $default  reduce using rule 25 (element_content)


State 36

   65 monomial: IDENTIFIER .
   66         | IDENTIFIER . DOT INT
   81 func_exe: IDENTIFIER . LEFT_PAREN identifiers RIGHT_PAREN
   82         | IDENTIFIER . LEFT_PAREN RIGHT_PAREN

    DOT         shift, and go to state 70
    LEFT_PAREN  shift, and go to state 32

    $default  reduce using rule 65 (monomial)


State 37

   61 expression: MINUS . expression

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 71
    monomial    go to state 40
    func_exe    go to state 41


State 38

   62 expression: LEFT_PAREN . expression RIGHT_PAREN

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 72
    monomial    go to state 40
    func_exe    go to state 41


State 39

   24 element_content: RETURN expression .
   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression

    EQUAL       shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    MORE_EQUAL  shift, and go to state 75
    LESS_EQUAL  shift, and go to state 76
    MORE        shift, and go to state 77
    LESS        shift, and go to state 78
    PLUS        shift, and go to state 79
    MINUS       shift, and go to state 80
    MULT        shift, and go to state 81
    DIV         shift, and go to state 82
    AND         shift, and go to state 83
    MOD         shift, and go to state 84
    OR          shift, and go to state 85

    $default  reduce using rule 24 (element_content)


State 40

   60 expression: monomial .

    $default  reduce using rule 60 (expression)


State 41

   67 monomial: func_exe .

    $default  reduce using rule 67 (monomial)


State 42

   38 identifiers: IDENTIFIER .
   39            | IDENTIFIER . DOT INT

    DOT  shift, and go to state 31

    $default  reduce using rule 38 (identifiers)


State 43

   30 input_output: INPUT identifiers .
   36 identifiers: identifiers . COMMA IDENTIFIER
   37            | identifiers . COMMA IDENTIFIER DOT INT

    COMMA  shift, and go to state 64

    $default  reduce using rule 30 (input_output)


State 44

   35 outputs: OUTPUT STRING .

    $default  reduce using rule 35 (outputs)


State 45

   34 outputs: OUTPUT expression .
   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression

    EQUAL       shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    MORE_EQUAL  shift, and go to state 75
    LESS_EQUAL  shift, and go to state 76
    MORE        shift, and go to state 77
    LESS        shift, and go to state 78
    PLUS        shift, and go to state 79
    MINUS       shift, and go to state 80
    MULT        shift, and go to state 81
    DIV         shift, and go to state 82
    AND         shift, and go to state 83
    MOD         shift, and go to state 84
    OR          shift, and go to state 85

    $default  reduce using rule 34 (outputs)


State 46

   68 if_stmt: IF LEFT_PAREN . expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   69        | IF LEFT_PAREN . expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   70        | IF LEFT_PAREN . expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACKET
   71        | IF LEFT_PAREN . expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 86
    monomial    go to state 40
    func_exe    go to state 41


State 47

   75 for_stmt: FOR LEFT_PAREN . declaration_subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   76         | FOR LEFT_PAREN . declaration_subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   77         | FOR LEFT_PAREN . subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   78         | FOR LEFT_PAREN . subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   79         | FOR LEFT_PAREN . subst_calc_2 COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   80         | FOR LEFT_PAREN . subst_calc_2 COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    IDENTIFIER  shift, and go to state 42
    IDENT_DECL  shift, and go to state 87

    declaration_subst_calc  go to state 88
    identifiers             go to state 24
    subst_calc              go to state 89
    subst_calc_2            go to state 90


State 48

   20 element_content: WHILE LEFT_PAREN . expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 91
    monomial    go to state 40
    func_exe    go to state 41


State 49

    7 func_block: FUNC IDENTIFIER . LEFT_PAREN identifiers RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols
    8           | FUNC IDENTIFIER . LEFT_PAREN identifiers RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE END
    9           | FUNC IDENTIFIER . LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols
   10           | FUNC IDENTIFIER . LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE END

    LEFT_PAREN  shift, and go to state 92


State 50

   27 declaration: IDENT_DECL identifiers .
   36 identifiers: identifiers . COMMA IDENTIFIER
   37            | identifiers . COMMA IDENTIFIER DOT INT
   40 subst_calc: identifiers . SUBST expression
   41           | identifiers . SUBST STRING

    SUBST  shift, and go to state 58
    COMMA  shift, and go to state 64

    $default  reduce using rule 27 (declaration)


State 51

   29 declaration_subst_calc: IDENT_DECL subst_calc .

    $default  reduce using rule 29 (declaration_subst_calc)


State 52

    0 $accept: program END .

    $default  accept


State 53

    2 blocks: blocks block .

    $default  reduce using rule 2 (blocks)


State 54

   11 elements: elements element .

    $default  reduce using rule 11 (elements)


State 55

   14 element: element_content END .

    $default  reduce using rule 14 (element)


State 56

   13 element: element_content eols .
   83 eols: eols . EOL

    EOL  shift, and go to state 65

    $default  reduce using rule 13 (element)


State 57

   32 outputs: outputs OUTPUT . expression
   33        | outputs OUTPUT . STRING

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    STRING      shift, and go to state 93
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 94
    monomial    go to state 40
    func_exe    go to state 41


State 58

   40 subst_calc: identifiers SUBST . expression
   41           | identifiers SUBST . STRING

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    STRING      shift, and go to state 95
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 96
    monomial    go to state 40
    func_exe    go to state 41


State 59

   42 subst_calc_2: identifiers ADD_SUBST . expression

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 97
    monomial    go to state 40
    func_exe    go to state 41


State 60

   43 subst_calc_2: identifiers SUBT_SUBST . expression

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 98
    monomial    go to state 40
    func_exe    go to state 41


State 61

   44 subst_calc_2: identifiers MULT_SUBST . expression

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 99
    monomial    go to state 40
    func_exe    go to state 41


State 62

   45 subst_calc_2: identifiers DIV_SUBST . expression

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 100
    monomial    go to state 40
    func_exe    go to state 41


State 63

   46 subst_calc_2: identifiers MOD_SUBST . expression

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 101
    monomial    go to state 40
    func_exe    go to state 41


State 64

   36 identifiers: identifiers COMMA . IDENTIFIER
   37            | identifiers COMMA . IDENTIFIER DOT INT

    IDENTIFIER  shift, and go to state 102


State 65

   83 eols: eols EOL .

    $default  reduce using rule 83 (eols)


State 66

    4 blocks: eols block .

    $default  reduce using rule 4 (blocks)


State 67

   39 identifiers: IDENTIFIER DOT INT .

    $default  reduce using rule 39 (identifiers)


State 68

   82 func_exe: IDENTIFIER LEFT_PAREN RIGHT_PAREN .

    $default  reduce using rule 82 (func_exe)


State 69

   36 identifiers: identifiers . COMMA IDENTIFIER
   37            | identifiers . COMMA IDENTIFIER DOT INT
   81 func_exe: IDENTIFIER LEFT_PAREN identifiers . RIGHT_PAREN

    COMMA        shift, and go to state 64
    RIGHT_PAREN  shift, and go to state 103


State 70

   66 monomial: IDENTIFIER DOT . INT

    INT  shift, and go to state 104


State 71

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression
   61           | MINUS expression .

    $default  reduce using rule 61 (expression)


State 72

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression
   62           | LEFT_PAREN expression . RIGHT_PAREN

    EQUAL        shift, and go to state 73
    NOT_EQUAL    shift, and go to state 74
    MORE_EQUAL   shift, and go to state 75
    LESS_EQUAL   shift, and go to state 76
    MORE         shift, and go to state 77
    LESS         shift, and go to state 78
    PLUS         shift, and go to state 79
    MINUS        shift, and go to state 80
    MULT         shift, and go to state 81
    DIV          shift, and go to state 82
    AND          shift, and go to state 83
    MOD          shift, and go to state 84
    OR           shift, and go to state 85
    RIGHT_PAREN  shift, and go to state 105


State 73

   52 expression: expression EQUAL . expression

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 106
    monomial    go to state 40
    func_exe    go to state 41


State 74

   53 expression: expression NOT_EQUAL . expression

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 107
    monomial    go to state 40
    func_exe    go to state 41


State 75

   54 expression: expression MORE_EQUAL . expression

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 108
    monomial    go to state 40
    func_exe    go to state 41


State 76

   55 expression: expression LESS_EQUAL . expression

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 109
    monomial    go to state 40
    func_exe    go to state 41


State 77

   56 expression: expression MORE . expression

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 110
    monomial    go to state 40
    func_exe    go to state 41


State 78

   57 expression: expression LESS . expression

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 111
    monomial    go to state 40
    func_exe    go to state 41


State 79

   47 expression: expression PLUS . expression

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 112
    monomial    go to state 40
    func_exe    go to state 41


State 80

   48 expression: expression MINUS . expression

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 113
    monomial    go to state 40
    func_exe    go to state 41


State 81

   49 expression: expression MULT . expression

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 114
    monomial    go to state 40
    func_exe    go to state 41


State 82

   50 expression: expression DIV . expression

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 115
    monomial    go to state 40
    func_exe    go to state 41


State 83

   58 expression: expression AND . expression

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 116
    monomial    go to state 40
    func_exe    go to state 41


State 84

   51 expression: expression MOD . expression

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 117
    monomial    go to state 40
    func_exe    go to state 41


State 85

   59 expression: expression OR . expression

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 118
    monomial    go to state 40
    func_exe    go to state 41


State 86

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression
   68 if_stmt: IF LEFT_PAREN expression . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   69        | IF LEFT_PAREN expression . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   70        | IF LEFT_PAREN expression . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACKET
   71        | IF LEFT_PAREN expression . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET

    EQUAL        shift, and go to state 73
    NOT_EQUAL    shift, and go to state 74
    MORE_EQUAL   shift, and go to state 75
    LESS_EQUAL   shift, and go to state 76
    MORE         shift, and go to state 77
    LESS         shift, and go to state 78
    PLUS         shift, and go to state 79
    MINUS        shift, and go to state 80
    MULT         shift, and go to state 81
    DIV          shift, and go to state 82
    AND          shift, and go to state 83
    MOD          shift, and go to state 84
    OR           shift, and go to state 85
    RIGHT_PAREN  shift, and go to state 119


State 87

   29 declaration_subst_calc: IDENT_DECL . subst_calc

    IDENTIFIER  shift, and go to state 42

    identifiers  go to state 120
    subst_calc   go to state 51


State 88

   75 for_stmt: FOR LEFT_PAREN declaration_subst_calc . COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   76         | FOR LEFT_PAREN declaration_subst_calc . COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    COMMA  shift, and go to state 121


State 89

   77 for_stmt: FOR LEFT_PAREN subst_calc . COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   78         | FOR LEFT_PAREN subst_calc . COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    COMMA  shift, and go to state 122


State 90

   79 for_stmt: FOR LEFT_PAREN subst_calc_2 . COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   80         | FOR LEFT_PAREN subst_calc_2 . COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    COMMA  shift, and go to state 123


State 91

   20 element_content: WHILE LEFT_PAREN expression . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression

    EQUAL        shift, and go to state 73
    NOT_EQUAL    shift, and go to state 74
    MORE_EQUAL   shift, and go to state 75
    LESS_EQUAL   shift, and go to state 76
    MORE         shift, and go to state 77
    LESS         shift, and go to state 78
    PLUS         shift, and go to state 79
    MINUS        shift, and go to state 80
    MULT         shift, and go to state 81
    DIV          shift, and go to state 82
    AND          shift, and go to state 83
    MOD          shift, and go to state 84
    OR           shift, and go to state 85
    RIGHT_PAREN  shift, and go to state 124


State 92

    7 func_block: FUNC IDENTIFIER LEFT_PAREN . identifiers RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols
    8           | FUNC IDENTIFIER LEFT_PAREN . identifiers RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE END
    9           | FUNC IDENTIFIER LEFT_PAREN . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols
   10           | FUNC IDENTIFIER LEFT_PAREN . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE END

    IDENTIFIER   shift, and go to state 42
    RIGHT_PAREN  shift, and go to state 125

    identifiers  go to state 126


State 93

   33 outputs: outputs OUTPUT STRING .

    $default  reduce using rule 33 (outputs)


State 94

   32 outputs: outputs OUTPUT expression .
   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression

    EQUAL       shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    MORE_EQUAL  shift, and go to state 75
    LESS_EQUAL  shift, and go to state 76
    MORE        shift, and go to state 77
    LESS        shift, and go to state 78
    PLUS        shift, and go to state 79
    MINUS       shift, and go to state 80
    MULT        shift, and go to state 81
    DIV         shift, and go to state 82
    AND         shift, and go to state 83
    MOD         shift, and go to state 84
    OR          shift, and go to state 85

    $default  reduce using rule 32 (outputs)


State 95

   41 subst_calc: identifiers SUBST STRING .

    $default  reduce using rule 41 (subst_calc)


State 96

   40 subst_calc: identifiers SUBST expression .
   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression

    EQUAL       shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    MORE_EQUAL  shift, and go to state 75
    LESS_EQUAL  shift, and go to state 76
    MORE        shift, and go to state 77
    LESS        shift, and go to state 78
    PLUS        shift, and go to state 79
    MINUS       shift, and go to state 80
    MULT        shift, and go to state 81
    DIV         shift, and go to state 82
    AND         shift, and go to state 83
    MOD         shift, and go to state 84
    OR          shift, and go to state 85

    $default  reduce using rule 40 (subst_calc)


State 97

   42 subst_calc_2: identifiers ADD_SUBST expression .
   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression

    EQUAL       shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    MORE_EQUAL  shift, and go to state 75
    LESS_EQUAL  shift, and go to state 76
    MORE        shift, and go to state 77
    LESS        shift, and go to state 78
    PLUS        shift, and go to state 79
    MINUS       shift, and go to state 80
    MULT        shift, and go to state 81
    DIV         shift, and go to state 82
    AND         shift, and go to state 83
    MOD         shift, and go to state 84
    OR          shift, and go to state 85

    $default  reduce using rule 42 (subst_calc_2)


State 98

   43 subst_calc_2: identifiers SUBT_SUBST expression .
   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression

    EQUAL       shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    MORE_EQUAL  shift, and go to state 75
    LESS_EQUAL  shift, and go to state 76
    MORE        shift, and go to state 77
    LESS        shift, and go to state 78
    PLUS        shift, and go to state 79
    MINUS       shift, and go to state 80
    MULT        shift, and go to state 81
    DIV         shift, and go to state 82
    AND         shift, and go to state 83
    MOD         shift, and go to state 84
    OR          shift, and go to state 85

    $default  reduce using rule 43 (subst_calc_2)


State 99

   44 subst_calc_2: identifiers MULT_SUBST expression .
   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression

    EQUAL       shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    MORE_EQUAL  shift, and go to state 75
    LESS_EQUAL  shift, and go to state 76
    MORE        shift, and go to state 77
    LESS        shift, and go to state 78
    PLUS        shift, and go to state 79
    MINUS       shift, and go to state 80
    MULT        shift, and go to state 81
    DIV         shift, and go to state 82
    AND         shift, and go to state 83
    MOD         shift, and go to state 84
    OR          shift, and go to state 85

    $default  reduce using rule 44 (subst_calc_2)


State 100

   45 subst_calc_2: identifiers DIV_SUBST expression .
   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression

    EQUAL       shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    MORE_EQUAL  shift, and go to state 75
    LESS_EQUAL  shift, and go to state 76
    MORE        shift, and go to state 77
    LESS        shift, and go to state 78
    PLUS        shift, and go to state 79
    MINUS       shift, and go to state 80
    MULT        shift, and go to state 81
    DIV         shift, and go to state 82
    AND         shift, and go to state 83
    MOD         shift, and go to state 84
    OR          shift, and go to state 85

    $default  reduce using rule 45 (subst_calc_2)


State 101

   46 subst_calc_2: identifiers MOD_SUBST expression .
   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression

    EQUAL       shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    MORE_EQUAL  shift, and go to state 75
    LESS_EQUAL  shift, and go to state 76
    MORE        shift, and go to state 77
    LESS        shift, and go to state 78
    PLUS        shift, and go to state 79
    MINUS       shift, and go to state 80
    MULT        shift, and go to state 81
    DIV         shift, and go to state 82
    AND         shift, and go to state 83
    MOD         shift, and go to state 84
    OR          shift, and go to state 85

    $default  reduce using rule 46 (subst_calc_2)


State 102

   36 identifiers: identifiers COMMA IDENTIFIER .
   37            | identifiers COMMA IDENTIFIER . DOT INT

    DOT  shift, and go to state 127

    $default  reduce using rule 36 (identifiers)


State 103

   81 func_exe: IDENTIFIER LEFT_PAREN identifiers RIGHT_PAREN .

    $default  reduce using rule 81 (func_exe)


State 104

   66 monomial: IDENTIFIER DOT INT .

    $default  reduce using rule 66 (monomial)


State 105

   62 expression: LEFT_PAREN expression RIGHT_PAREN .

    $default  reduce using rule 62 (expression)


State 106

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   52           | expression EQUAL expression .
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression

    PLUS   shift, and go to state 79
    MINUS  shift, and go to state 80
    MULT   shift, and go to state 81
    DIV    shift, and go to state 82
    MOD    shift, and go to state 84

    $default  reduce using rule 52 (expression)


State 107

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   53           | expression NOT_EQUAL expression .
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression

    PLUS   shift, and go to state 79
    MINUS  shift, and go to state 80
    MULT   shift, and go to state 81
    DIV    shift, and go to state 82
    MOD    shift, and go to state 84

    $default  reduce using rule 53 (expression)


State 108

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   54           | expression MORE_EQUAL expression .
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression

    PLUS   shift, and go to state 79
    MINUS  shift, and go to state 80
    MULT   shift, and go to state 81
    DIV    shift, and go to state 82
    MOD    shift, and go to state 84

    $default  reduce using rule 54 (expression)


State 109

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   55           | expression LESS_EQUAL expression .
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression

    PLUS   shift, and go to state 79
    MINUS  shift, and go to state 80
    MULT   shift, and go to state 81
    DIV    shift, and go to state 82
    MOD    shift, and go to state 84

    $default  reduce using rule 55 (expression)


State 110

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   56           | expression MORE expression .
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression

    PLUS   shift, and go to state 79
    MINUS  shift, and go to state 80
    MULT   shift, and go to state 81
    DIV    shift, and go to state 82
    MOD    shift, and go to state 84

    $default  reduce using rule 56 (expression)


State 111

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   57           | expression LESS expression .
   58           | expression . AND expression
   59           | expression . OR expression

    PLUS   shift, and go to state 79
    MINUS  shift, and go to state 80
    MULT   shift, and go to state 81
    DIV    shift, and go to state 82
    MOD    shift, and go to state 84

    $default  reduce using rule 57 (expression)


State 112

   47 expression: expression . PLUS expression
   47           | expression PLUS expression .
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression

    MULT  shift, and go to state 81
    DIV   shift, and go to state 82
    MOD   shift, and go to state 84

    $default  reduce using rule 47 (expression)


State 113

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   48           | expression MINUS expression .
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression

    MULT  shift, and go to state 81
    DIV   shift, and go to state 82
    MOD   shift, and go to state 84

    $default  reduce using rule 48 (expression)


State 114

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   49           | expression MULT expression .
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression

    $default  reduce using rule 49 (expression)


State 115

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   50           | expression DIV expression .
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression

    $default  reduce using rule 50 (expression)


State 116

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   58           | expression AND expression .
   59           | expression . OR expression

    EQUAL       shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    MORE_EQUAL  shift, and go to state 75
    LESS_EQUAL  shift, and go to state 76
    MORE        shift, and go to state 77
    LESS        shift, and go to state 78
    PLUS        shift, and go to state 79
    MINUS       shift, and go to state 80
    MULT        shift, and go to state 81
    DIV         shift, and go to state 82
    MOD         shift, and go to state 84

    $default  reduce using rule 58 (expression)


State 117

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   51           | expression MOD expression .
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression

    $default  reduce using rule 51 (expression)


State 118

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression
   59           | expression OR expression .

    EQUAL       shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    MORE_EQUAL  shift, and go to state 75
    LESS_EQUAL  shift, and go to state 76
    MORE        shift, and go to state 77
    LESS        shift, and go to state 78
    PLUS        shift, and go to state 79
    MINUS       shift, and go to state 80
    MULT        shift, and go to state 81
    DIV         shift, and go to state 82
    MOD         shift, and go to state 84

    $default  reduce using rule 59 (expression)


State 119

   68 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   69        | IF LEFT_PAREN expression RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   70        | IF LEFT_PAREN expression RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACKET
   71        | IF LEFT_PAREN expression RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET

    EOL  shift, and go to state 128


State 120

   36 identifiers: identifiers . COMMA IDENTIFIER
   37            | identifiers . COMMA IDENTIFIER DOT INT
   40 subst_calc: identifiers . SUBST expression
   41           | identifiers . SUBST STRING

    SUBST  shift, and go to state 58
    COMMA  shift, and go to state 64


State 121

   75 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA . expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   76         | FOR LEFT_PAREN declaration_subst_calc COMMA . expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 129
    monomial    go to state 40
    func_exe    go to state 41


State 122

   77 for_stmt: FOR LEFT_PAREN subst_calc COMMA . expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   78         | FOR LEFT_PAREN subst_calc COMMA . expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 130
    monomial    go to state 40
    func_exe    go to state 41


State 123

   79 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA . expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   80         | FOR LEFT_PAREN subst_calc_2 COMMA . expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 131
    monomial    go to state 40
    func_exe    go to state 41


State 124

   20 element_content: WHILE LEFT_PAREN expression RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE

    EOL  shift, and go to state 132


State 125

    9 func_block: FUNC IDENTIFIER LEFT_PAREN RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE eols
   10           | FUNC IDENTIFIER LEFT_PAREN RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE END

    EOL  shift, and go to state 133


State 126

    7 func_block: FUNC IDENTIFIER LEFT_PAREN identifiers . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols
    8           | FUNC IDENTIFIER LEFT_PAREN identifiers . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE END
   36 identifiers: identifiers . COMMA IDENTIFIER
   37            | identifiers . COMMA IDENTIFIER DOT INT

    COMMA        shift, and go to state 64
    RIGHT_PAREN  shift, and go to state 134


State 127

   37 identifiers: identifiers COMMA IDENTIFIER DOT . INT

    INT  shift, and go to state 135


State 128

   68 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACKET
   69        | IF LEFT_PAREN expression RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   70        | IF LEFT_PAREN expression RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACKET
   71        | IF LEFT_PAREN expression RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET

    LEFT_BRACE  shift, and go to state 136


State 129

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression
   75 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression . COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   76         | FOR LEFT_PAREN declaration_subst_calc COMMA expression . COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    EQUAL       shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    MORE_EQUAL  shift, and go to state 75
    LESS_EQUAL  shift, and go to state 76
    MORE        shift, and go to state 77
    LESS        shift, and go to state 78
    PLUS        shift, and go to state 79
    MINUS       shift, and go to state 80
    MULT        shift, and go to state 81
    DIV         shift, and go to state 82
    AND         shift, and go to state 83
    MOD         shift, and go to state 84
    OR          shift, and go to state 85
    COMMA       shift, and go to state 137


State 130

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression
   77 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression . COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   78         | FOR LEFT_PAREN subst_calc COMMA expression . COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    EQUAL       shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    MORE_EQUAL  shift, and go to state 75
    LESS_EQUAL  shift, and go to state 76
    MORE        shift, and go to state 77
    LESS        shift, and go to state 78
    PLUS        shift, and go to state 79
    MINUS       shift, and go to state 80
    MULT        shift, and go to state 81
    DIV         shift, and go to state 82
    AND         shift, and go to state 83
    MOD         shift, and go to state 84
    OR          shift, and go to state 85
    COMMA       shift, and go to state 138


State 131

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression
   79 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression . COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   80         | FOR LEFT_PAREN subst_calc_2 COMMA expression . COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    EQUAL       shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    MORE_EQUAL  shift, and go to state 75
    LESS_EQUAL  shift, and go to state 76
    MORE        shift, and go to state 77
    LESS        shift, and go to state 78
    PLUS        shift, and go to state 79
    MINUS       shift, and go to state 80
    MULT        shift, and go to state 81
    DIV         shift, and go to state 82
    AND         shift, and go to state 83
    MOD         shift, and go to state 84
    OR          shift, and go to state 85
    COMMA       shift, and go to state 139


State 132

   20 element_content: WHILE LEFT_PAREN expression RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 140


State 133

    9 func_block: FUNC IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE eols
   10           | FUNC IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE END

    LEFT_BRACE  shift, and go to state 141


State 134

    7 func_block: FUNC IDENTIFIER LEFT_PAREN identifiers RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE eols
    8           | FUNC IDENTIFIER LEFT_PAREN identifiers RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE END

    EOL  shift, and go to state 142


State 135

   37 identifiers: identifiers COMMA IDENTIFIER DOT INT .

    $default  reduce using rule 37 (identifiers)


State 136

   68 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACKET
   69        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   70        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACKET
   71        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET

    EOL  shift, and go to state 143


State 137

   75 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA . subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   76         | FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA . subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    IDENTIFIER  shift, and go to state 42

    identifiers   go to state 24
    subst_calc    go to state 144
    subst_calc_2  go to state 145


State 138

   77 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA . subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   78         | FOR LEFT_PAREN subst_calc COMMA expression COMMA . subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    IDENTIFIER  shift, and go to state 42

    identifiers   go to state 24
    subst_calc    go to state 146
    subst_calc_2  go to state 147


State 139

   79 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA . subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   80         | FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA . subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    IDENTIFIER  shift, and go to state 42

    identifiers   go to state 24
    subst_calc    go to state 148
    subst_calc_2  go to state 149


State 140

   20 element_content: WHILE LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE

    EOL  shift, and go to state 150


State 141

    9 func_block: FUNC IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE eols
   10           | FUNC IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE END

    EOL  shift, and go to state 151


State 142

    7 func_block: FUNC IDENTIFIER LEFT_PAREN identifiers RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE eols
    8           | FUNC IDENTIFIER LEFT_PAREN identifiers RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE END

    LEFT_BRACE  shift, and go to state 152


State 143

   68 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACKET
   69        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   70        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACKET
   71        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    IDENT_DECL  shift, and go to state 11

    elements                go to state 153
    element                 go to state 18
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 144

   75 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    RIGHT_PAREN  shift, and go to state 154


State 145

   76 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc_2 . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    RIGHT_PAREN  shift, and go to state 155


State 146

   77 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    RIGHT_PAREN  shift, and go to state 156


State 147

   78 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc_2 . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    RIGHT_PAREN  shift, and go to state 157


State 148

   79 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    RIGHT_PAREN  shift, and go to state 158


State 149

   80 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc_2 . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    RIGHT_PAREN  shift, and go to state 159


State 150

   20 element_content: WHILE LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    IDENT_DECL  shift, and go to state 11

    elements                go to state 160
    element                 go to state 18
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 151

    9 func_block: FUNC IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE eols
   10           | FUNC IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE END

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    IDENT_DECL  shift, and go to state 11

    elements                go to state 161
    element                 go to state 18
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 152

    7 func_block: FUNC IDENTIFIER LEFT_PAREN identifiers RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE eols
    8           | FUNC IDENTIFIER LEFT_PAREN identifiers RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE END

    EOL  shift, and go to state 162


State 153

   11 elements: elements . element
   68 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACKET
   69        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   70        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE EOL else_if_stmts RIGHT_BRACKET
   71        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET

    IDENTIFIER     shift, and go to state 1
    RETURN         shift, and go to state 2
    INPUT          shift, and go to state 3
    OUTPUT         shift, and go to state 4
    IF             shift, and go to state 5
    FOR            shift, and go to state 6
    WHILE          shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RIGHT_BRACE    shift, and go to state 163
    RIGHT_BRACKET  shift, and go to state 164
    IDENT_DECL     shift, and go to state 11

    element                 go to state 54
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 154

   75 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE

    EOL  shift, and go to state 165


State 155

   76 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE

    EOL  shift, and go to state 166


State 156

   77 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE

    EOL  shift, and go to state 167


State 157

   78 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE

    EOL  shift, and go to state 168


State 158

   79 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE

    EOL  shift, and go to state 169


State 159

   80 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc_2 RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE

    EOL  shift, and go to state 170


State 160

   11 elements: elements . element
   20 element_content: WHILE LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE

    IDENTIFIER   shift, and go to state 1
    RETURN       shift, and go to state 2
    INPUT        shift, and go to state 3
    OUTPUT       shift, and go to state 4
    IF           shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    BREAK        shift, and go to state 8
    CONTINUE     shift, and go to state 9
    RIGHT_BRACE  shift, and go to state 171
    IDENT_DECL   shift, and go to state 11

    element                 go to state 54
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 161

    9 func_block: FUNC IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE eols
   10           | FUNC IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE END
   11 elements: elements . element

    IDENTIFIER   shift, and go to state 1
    RETURN       shift, and go to state 2
    INPUT        shift, and go to state 3
    OUTPUT       shift, and go to state 4
    IF           shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    BREAK        shift, and go to state 8
    CONTINUE     shift, and go to state 9
    RIGHT_BRACE  shift, and go to state 172
    IDENT_DECL   shift, and go to state 11

    element                 go to state 54
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 162

    7 func_block: FUNC IDENTIFIER LEFT_PAREN identifiers RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE eols
    8           | FUNC IDENTIFIER LEFT_PAREN identifiers RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE END

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    IDENT_DECL  shift, and go to state 11

    elements                go to state 173
    element                 go to state 18
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 163

   69 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE . EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   70        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE . EOL else_if_stmts RIGHT_BRACKET
   71        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE . EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET

    EOL  shift, and go to state 174


State 164

   68 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACKET .

    $default  reduce using rule 68 (if_stmt)


State 165

   75 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 175


State 166

   76 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 176


State 167

   77 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 177


State 168

   78 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 178


State 169

   79 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 179


State 170

   80 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 180


State 171

   20 element_content: WHILE LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE .

    $default  reduce using rule 20 (element_content)


State 172

    9 func_block: FUNC IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE . eols
   10           | FUNC IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE . END

    END  shift, and go to state 181
    EOL  shift, and go to state 12

    eols  go to state 182


State 173

    7 func_block: FUNC IDENTIFIER LEFT_PAREN identifiers RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE eols
    8           | FUNC IDENTIFIER LEFT_PAREN identifiers RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE END
   11 elements: elements . element

    IDENTIFIER   shift, and go to state 1
    RETURN       shift, and go to state 2
    INPUT        shift, and go to state 3
    OUTPUT       shift, and go to state 4
    IF           shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    BREAK        shift, and go to state 8
    CONTINUE     shift, and go to state 9
    RIGHT_BRACE  shift, and go to state 183
    IDENT_DECL   shift, and go to state 11

    element                 go to state 54
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 174

   69 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL . ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   70        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL . else_if_stmts RIGHT_BRACKET
   71        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL . else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET

    ELSE  shift, and go to state 184

    else_if_stmts  go to state 185
    else_if_stmt   go to state 186


State 175

   75 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE

    EOL  shift, and go to state 187


State 176

   76 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE

    EOL  shift, and go to state 188


State 177

   77 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE

    EOL  shift, and go to state 189


State 178

   78 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE

    EOL  shift, and go to state 190


State 179

   79 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE

    EOL  shift, and go to state 191


State 180

   80 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE

    EOL  shift, and go to state 192


State 181

   10 func_block: FUNC IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE END .

    $default  reduce using rule 10 (func_block)


State 182

    9 func_block: FUNC IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols .
   83 eols: eols . EOL

    EOL  shift, and go to state 65

    $default  reduce using rule 9 (func_block)


State 183

    7 func_block: FUNC IDENTIFIER LEFT_PAREN identifiers RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE . eols
    8           | FUNC IDENTIFIER LEFT_PAREN identifiers RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE . END

    END  shift, and go to state 193
    EOL  shift, and go to state 12

    eols  go to state 194


State 184

   69 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL ELSE . EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   74 else_if_stmt: ELSE . IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements

    IF   shift, and go to state 195
    EOL  shift, and go to state 196


State 185

   70 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts . RIGHT_BRACKET
   71        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts . RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   72 else_if_stmts: else_if_stmts . RIGHT_BRACE EOL else_if_stmt

    RIGHT_BRACE    shift, and go to state 197
    RIGHT_BRACKET  shift, and go to state 198


State 186

   73 else_if_stmts: else_if_stmt .

    $default  reduce using rule 73 (else_if_stmts)


State 187

   75 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    IDENT_DECL  shift, and go to state 11

    elements                go to state 199
    element                 go to state 18
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 188

   76 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    IDENT_DECL  shift, and go to state 11

    elements                go to state 200
    element                 go to state 18
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 189

   77 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    IDENT_DECL  shift, and go to state 11

    elements                go to state 201
    element                 go to state 18
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 190

   78 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    IDENT_DECL  shift, and go to state 11

    elements                go to state 202
    element                 go to state 18
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 191

   79 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    IDENT_DECL  shift, and go to state 11

    elements                go to state 203
    element                 go to state 18
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 192

   80 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    IDENT_DECL  shift, and go to state 11

    elements                go to state 204
    element                 go to state 18
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 193

    8 func_block: FUNC IDENTIFIER LEFT_PAREN identifiers RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE END .

    $default  reduce using rule 8 (func_block)


State 194

    7 func_block: FUNC IDENTIFIER LEFT_PAREN identifiers RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols .
   83 eols: eols . EOL

    EOL  shift, and go to state 65

    $default  reduce using rule 7 (func_block)


State 195

   74 else_if_stmt: ELSE IF . LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements

    LEFT_PAREN  shift, and go to state 205


State 196

   69 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL ELSE EOL . LEFT_BRACE EOL elements RIGHT_BRACKET

    LEFT_BRACE  shift, and go to state 206


State 197

   71 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE . EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   72 else_if_stmts: else_if_stmts RIGHT_BRACE . EOL else_if_stmt

    EOL  shift, and go to state 207


State 198

   70 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACKET .

    $default  reduce using rule 70 (if_stmt)


State 199

   11 elements: elements . element
   75 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE

    IDENTIFIER   shift, and go to state 1
    RETURN       shift, and go to state 2
    INPUT        shift, and go to state 3
    OUTPUT       shift, and go to state 4
    IF           shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    BREAK        shift, and go to state 8
    CONTINUE     shift, and go to state 9
    RIGHT_BRACE  shift, and go to state 208
    IDENT_DECL   shift, and go to state 11

    element                 go to state 54
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 200

   11 elements: elements . element
   76 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE

    IDENTIFIER   shift, and go to state 1
    RETURN       shift, and go to state 2
    INPUT        shift, and go to state 3
    OUTPUT       shift, and go to state 4
    IF           shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    BREAK        shift, and go to state 8
    CONTINUE     shift, and go to state 9
    RIGHT_BRACE  shift, and go to state 209
    IDENT_DECL   shift, and go to state 11

    element                 go to state 54
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 201

   11 elements: elements . element
   77 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE

    IDENTIFIER   shift, and go to state 1
    RETURN       shift, and go to state 2
    INPUT        shift, and go to state 3
    OUTPUT       shift, and go to state 4
    IF           shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    BREAK        shift, and go to state 8
    CONTINUE     shift, and go to state 9
    RIGHT_BRACE  shift, and go to state 210
    IDENT_DECL   shift, and go to state 11

    element                 go to state 54
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 202

   11 elements: elements . element
   78 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE

    IDENTIFIER   shift, and go to state 1
    RETURN       shift, and go to state 2
    INPUT        shift, and go to state 3
    OUTPUT       shift, and go to state 4
    IF           shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    BREAK        shift, and go to state 8
    CONTINUE     shift, and go to state 9
    RIGHT_BRACE  shift, and go to state 211
    IDENT_DECL   shift, and go to state 11

    element                 go to state 54
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 203

   11 elements: elements . element
   79 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE

    IDENTIFIER   shift, and go to state 1
    RETURN       shift, and go to state 2
    INPUT        shift, and go to state 3
    OUTPUT       shift, and go to state 4
    IF           shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    BREAK        shift, and go to state 8
    CONTINUE     shift, and go to state 9
    RIGHT_BRACE  shift, and go to state 212
    IDENT_DECL   shift, and go to state 11

    element                 go to state 54
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 204

   11 elements: elements . element
   80 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE

    IDENTIFIER   shift, and go to state 1
    RETURN       shift, and go to state 2
    INPUT        shift, and go to state 3
    OUTPUT       shift, and go to state 4
    IF           shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    BREAK        shift, and go to state 8
    CONTINUE     shift, and go to state 9
    RIGHT_BRACE  shift, and go to state 213
    IDENT_DECL   shift, and go to state 11

    element                 go to state 54
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 205

   74 else_if_stmt: ELSE IF LEFT_PAREN . expression RIGHT_PAREN EOL LEFT_BRACE EOL elements

    INT         shift, and go to state 33
    FLOAT       shift, and go to state 34
    IDENTIFIER  shift, and go to state 36
    MINUS       shift, and go to state 37
    LEFT_PAREN  shift, and go to state 38

    expression  go to state 214
    monomial    go to state 40
    func_exe    go to state 41


State 206

   69 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL ELSE EOL LEFT_BRACE . EOL elements RIGHT_BRACKET

    EOL  shift, and go to state 215


State 207

   71 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL . ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   72 else_if_stmts: else_if_stmts RIGHT_BRACE EOL . else_if_stmt

    ELSE  shift, and go to state 216

    else_if_stmt  go to state 217


State 208

   75 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE .

    $default  reduce using rule 75 (for_stmt)


State 209

   76 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE .

    $default  reduce using rule 76 (for_stmt)


State 210

   77 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE .

    $default  reduce using rule 77 (for_stmt)


State 211

   78 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE .

    $default  reduce using rule 78 (for_stmt)


State 212

   79 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE .

    $default  reduce using rule 79 (for_stmt)


State 213

   80 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE .

    $default  reduce using rule 80 (for_stmt)


State 214

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . MULT expression
   50           | expression . DIV expression
   51           | expression . MOD expression
   52           | expression . EQUAL expression
   53           | expression . NOT_EQUAL expression
   54           | expression . MORE_EQUAL expression
   55           | expression . LESS_EQUAL expression
   56           | expression . MORE expression
   57           | expression . LESS expression
   58           | expression . AND expression
   59           | expression . OR expression
   74 else_if_stmt: ELSE IF LEFT_PAREN expression . RIGHT_PAREN EOL LEFT_BRACE EOL elements

    EQUAL        shift, and go to state 73
    NOT_EQUAL    shift, and go to state 74
    MORE_EQUAL   shift, and go to state 75
    LESS_EQUAL   shift, and go to state 76
    MORE         shift, and go to state 77
    LESS         shift, and go to state 78
    PLUS         shift, and go to state 79
    MINUS        shift, and go to state 80
    MULT         shift, and go to state 81
    DIV          shift, and go to state 82
    AND          shift, and go to state 83
    MOD          shift, and go to state 84
    OR           shift, and go to state 85
    RIGHT_PAREN  shift, and go to state 218


State 215

   69 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL . elements RIGHT_BRACKET

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    IDENT_DECL  shift, and go to state 11

    elements                go to state 219
    element                 go to state 18
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 216

   71 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE . EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   74 else_if_stmt: ELSE . IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements

    IF   shift, and go to state 195
    EOL  shift, and go to state 220


State 217

   72 else_if_stmts: else_if_stmts RIGHT_BRACE EOL else_if_stmt .

    $default  reduce using rule 72 (else_if_stmts)


State 218

   74 else_if_stmt: ELSE IF LEFT_PAREN expression RIGHT_PAREN . EOL LEFT_BRACE EOL elements

    EOL  shift, and go to state 221


State 219

   11 elements: elements . element
   69 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements . RIGHT_BRACKET

    IDENTIFIER     shift, and go to state 1
    RETURN         shift, and go to state 2
    INPUT          shift, and go to state 3
    OUTPUT         shift, and go to state 4
    IF             shift, and go to state 5
    FOR            shift, and go to state 6
    WHILE          shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RIGHT_BRACKET  shift, and go to state 222
    IDENT_DECL     shift, and go to state 11

    element                 go to state 54
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 220

   71 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL . LEFT_BRACE EOL elements RIGHT_BRACKET

    LEFT_BRACE  shift, and go to state 223


State 221

   74 else_if_stmt: ELSE IF LEFT_PAREN expression RIGHT_PAREN EOL . LEFT_BRACE EOL elements

    LEFT_BRACE  shift, and go to state 224


State 222

   69 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET .

    $default  reduce using rule 69 (if_stmt)


State 223

   71 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE . EOL elements RIGHT_BRACKET

    EOL  shift, and go to state 225


State 224

   74 else_if_stmt: ELSE IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE . EOL elements

    EOL  shift, and go to state 226


State 225

   71 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL . elements RIGHT_BRACKET

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    IDENT_DECL  shift, and go to state 11

    elements                go to state 227
    element                 go to state 18
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 226

   74 else_if_stmt: ELSE IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL . elements

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    IDENT_DECL  shift, and go to state 11

    elements                go to state 228
    element                 go to state 18
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 227

   11 elements: elements . element
   71 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements . RIGHT_BRACKET

    IDENTIFIER     shift, and go to state 1
    RETURN         shift, and go to state 2
    INPUT          shift, and go to state 3
    OUTPUT         shift, and go to state 4
    IF             shift, and go to state 5
    FOR            shift, and go to state 6
    WHILE          shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RIGHT_BRACKET  shift, and go to state 229
    IDENT_DECL     shift, and go to state 11

    element                 go to state 54
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 228

   11 elements: elements . element
   74 else_if_stmt: ELSE IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements .

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    IDENT_DECL  shift, and go to state 11

    $default  reduce using rule 74 (else_if_stmt)

    element                 go to state 54
    element_content         go to state 19
    declaration             go to state 20
    declaration_subst_calc  go to state 21
    input_output            go to state 22
    outputs                 go to state 23
    identifiers             go to state 24
    subst_calc              go to state 25
    subst_calc_2            go to state 26
    if_stmt                 go to state 27
    for_stmt                go to state 28
    func_exe                go to state 29


State 229

   71 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET .

    $default  reduce using rule 71 (if_stmt)
