Grammar

    0 $accept: program END

    1 program: blocks

    2 blocks: elements
    3       | eols elements
    4       | func_blocks elements
    5       | eols func_blocks elements

    6 func_blocks: func_blocks func_block
    7            | func_block

    8 func_block: types IDENTIFIER LEFT_PAREN args RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols
    9           | types IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols
   10           | VOID IDENTIFIER LEFT_PAREN args RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols
   11           | VOID IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols

   12 elements: elements element
   13         | element

   14 element: element_content eols
   15        | element_content END

   16 element_content: declaration
   17                | input_output
   18                | subst_calc
   19                | subst_calc_2
   20                | if_stmt
   21                | WHILE LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   22                | for_stmt
   23                | BREAK
   24                | CONTINUE
   25                | RETURN expression
   26                | RETURN STRINGLITERAL
   27                | func_exe
   28                | SEMICOLON

   29 declaration: types identifiers
   30            | declaration_subst_calc

   31 declaration_subst_calc: types subst_calc

   32 input_output: INPUT identifiers
   33             | outputs

   34 outputs: outputs OUTPUT expression
   35        | outputs OUTPUT STRINGLITERAL
   36        | OUTPUT expression
   37        | OUTPUT STRINGLITERAL

   38 identifiers: identifiers COMMA IDENTIFIER
   39            | identifiers COMMA IDENTIFIER DOT DOUBLELITERAL
   40            | identifiers COMMA IDENTIFIER DOT IDENTIFIER
   41            | IDENTIFIER
   42            | IDENTIFIER DOT DOUBLELITERAL
   43            | IDENTIFIER DOT IDENTIFIER

   44 subst_calc: identifiers SUBST expression
   45           | identifiers SUBST STRINGLITERAL

   46 subst_calc_2: identifiers ADD_SUBST expression
   47             | identifiers SUBT_SUBST expression
   48             | identifiers MULT_SUBST expression
   49             | identifiers DIV_SUBST expression

   50 expression: expression PLUS expression
   51           | expression MINUS expression
   52           | expression MULT expression
   53           | expression DIV expression
   54           | expression EQUAL expression
   55           | expression NOT_EQUAL expression
   56           | expression MORE_EQUAL expression
   57           | expression LESS_EQUAL expression
   58           | expression MORE expression
   59           | expression LESS expression
   60           | expression AND expression
   61           | expression OR expression
   62           | monomial
   63           | MINUS expression
   64           | LEFT_PAREN expression RIGHT_PAREN

   65 monomial: DOUBLELITERAL
   66         | IDENTIFIER
   67         | IDENTIFIER DOT DOUBLELITERAL
   68         | IDENTIFIER DOT IDENTIFIER
   69         | func_exe

   70 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   71        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   72        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACKET
   73        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET

   74 else_if_stmts: else_if_stmts RIGHT_BRACE EOL else_if_stmt
   75              | else_if_stmt

   76 else_if_stmt: ELSE IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements

   77 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   78         | FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   79         | FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   80         | FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   81         | FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   82         | FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

   83 func_exe: IDENTIFIER LEFT_PAREN identifiers RIGHT_PAREN
   84         | IDENTIFIER LEFT_PAREN RIGHT_PAREN

   85 args: args COMMA types IDENTIFIER
   86     | types IDENTIFIER

   87 types: DOUBLE
   88      | STRING

   89 eols: eols EOL
   90     | EOL


Terminals, with rules where they appear

END (0) 0 15
error (256)
DOUBLELITERAL (258) 39 42 65 67
STRINGLITERAL (259) 26 35 37 45
IDENTIFIER (260) 8 9 10 11 38 39 40 41 42 43 66 67 68 83 84 85 86
EQUAL (261) 54
NOT_EQUAL (262) 55
MORE_EQUAL (263) 56
LESS_EQUAL (264) 57
MORE (265) 58
LESS (266) 59
SUBST (267) 44 45
PLUS (268) 50
MINUS (269) 51 63
MULT (270) 52
DIV (271) 53
AND (272) 60
OR (273) 61
ADD_SUBST (274) 46
SUBT_SUBST (275) 47
MULT_SUBST (276) 48
DIV_SUBST (277) 49
RETURN (278) 25 26
DOT (279) 39 40 42 43 67 68
COMMA (280) 38 39 40 77 78 79 80 81 82 85
INPUT (281) 32
OUTPUT (282) 34 35 36 37
IF (283) 70 71 72 73 76
ELSE (284) 71 73 76
FOR (285) 77 78 79 80 81 82
WHILE (286) 21
BREAK (287) 23
CONTINUE (288) 24
LEFT_PAREN (289) 8 9 10 11 21 64 70 71 72 73 76 77 78 79 80 81 82 83
    84
RIGHT_PAREN (290) 8 9 10 11 21 64 70 71 72 73 76 77 78 79 80 81 82
    83 84
LEFT_BRACE (291) 8 9 10 11 21 70 71 72 73 76 77 78 79 80 81 82
RIGHT_BRACE (292) 8 9 10 11 21 71 72 73 74 77 78 79 80 81 82
RIGHT_BRACKET (293) 70 71 72 73
DOUBLE (294) 87
STRING (295) 88
VOID (296) 10 11
SEMICOLON (297) 28
EOL (298) 8 9 10 11 21 70 71 72 73 74 76 77 78 79 80 81 82 89 90
UMINUS (299)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
blocks (47)
    on left: 2 3 4 5, on right: 1
func_blocks (48)
    on left: 6 7, on right: 4 5 6
func_block (49)
    on left: 8 9 10 11, on right: 6 7
elements (50)
    on left: 12 13, on right: 2 3 4 5 8 9 10 11 12 21 70 71 72 73 76
    77 78 79 80 81 82
element (51)
    on left: 14 15, on right: 12 13
element_content (52)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28, on right: 14 15
declaration (53)
    on left: 29 30, on right: 16
declaration_subst_calc (54)
    on left: 31, on right: 30 77 78
input_output (55)
    on left: 32 33, on right: 17
outputs (56)
    on left: 34 35 36 37, on right: 33 34 35
identifiers (57)
    on left: 38 39 40 41 42 43, on right: 29 32 38 39 40 44 45 46 47
    48 49 83
subst_calc (58)
    on left: 44 45, on right: 18 31 77 79 80 81
subst_calc_2 (59)
    on left: 46 47 48 49, on right: 19 78 80 81 82
expression (60)
    on left: 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64, on right:
    21 25 34 36 44 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
    63 64 70 71 72 73 76 77 78 79 80 81 82
monomial (61)
    on left: 65 66 67 68 69, on right: 62
if_stmt (62)
    on left: 70 71 72 73, on right: 20
else_if_stmts (63)
    on left: 74 75, on right: 72 73 74
else_if_stmt (64)
    on left: 76, on right: 74 75
for_stmt (65)
    on left: 77 78 79 80 81 82, on right: 22
func_exe (66)
    on left: 83 84, on right: 27 69
args (67)
    on left: 85 86, on right: 8 10 85
types (68)
    on left: 87 88, on right: 8 9 29 31 85 86
eols (69)
    on left: 89 90, on right: 3 5 8 9 10 11 14 89


State 0

    0 $accept: . program END

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    DOUBLE      shift, and go to state 10
    STRING      shift, and go to state 11
    VOID        shift, and go to state 12
    SEMICOLON   shift, and go to state 13
    EOL         shift, and go to state 14

    program                 go to state 15
    blocks                  go to state 16
    func_blocks             go to state 17
    func_block              go to state 18
    elements                go to state 19
    element                 go to state 20
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 32
    eols                    go to state 33


State 1

   41 identifiers: IDENTIFIER .
   42            | IDENTIFIER . DOT DOUBLELITERAL
   43            | IDENTIFIER . DOT IDENTIFIER
   83 func_exe: IDENTIFIER . LEFT_PAREN identifiers RIGHT_PAREN
   84         | IDENTIFIER . LEFT_PAREN RIGHT_PAREN

    DOT         shift, and go to state 34
    LEFT_PAREN  shift, and go to state 35

    $default  reduce using rule 41 (identifiers)


State 2

   25 element_content: RETURN . expression
   26                | RETURN . STRINGLITERAL

    DOUBLELITERAL  shift, and go to state 36
    STRINGLITERAL  shift, and go to state 37
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 41
    monomial    go to state 42
    func_exe    go to state 43


State 3

   32 input_output: INPUT . identifiers

    IDENTIFIER  shift, and go to state 44

    identifiers  go to state 45


State 4

   36 outputs: OUTPUT . expression
   37        | OUTPUT . STRINGLITERAL

    DOUBLELITERAL  shift, and go to state 36
    STRINGLITERAL  shift, and go to state 46
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 47
    monomial    go to state 42
    func_exe    go to state 43


State 5

   70 if_stmt: IF . LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   71        | IF . LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   72        | IF . LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACKET
   73        | IF . LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET

    LEFT_PAREN  shift, and go to state 48


State 6

   77 for_stmt: FOR . LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   78         | FOR . LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   79         | FOR . LEFT_PAREN subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   80         | FOR . LEFT_PAREN subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   81         | FOR . LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   82         | FOR . LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    LEFT_PAREN  shift, and go to state 49


State 7

   21 element_content: WHILE . LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    LEFT_PAREN  shift, and go to state 50


State 8

   23 element_content: BREAK .

    $default  reduce using rule 23 (element_content)


State 9

   24 element_content: CONTINUE .

    $default  reduce using rule 24 (element_content)


State 10

   87 types: DOUBLE .

    $default  reduce using rule 87 (types)


State 11

   88 types: STRING .

    $default  reduce using rule 88 (types)


State 12

   10 func_block: VOID . IDENTIFIER LEFT_PAREN args RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols
   11           | VOID . IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols

    IDENTIFIER  shift, and go to state 51


State 13

   28 element_content: SEMICOLON .

    $default  reduce using rule 28 (element_content)


State 14

   90 eols: EOL .

    $default  reduce using rule 90 (eols)


State 15

    0 $accept: program . END

    END  shift, and go to state 52


State 16

    1 program: blocks .

    $default  reduce using rule 1 (program)


State 17

    4 blocks: func_blocks . elements
    6 func_blocks: func_blocks . func_block

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    DOUBLE      shift, and go to state 10
    STRING      shift, and go to state 11
    VOID        shift, and go to state 12
    SEMICOLON   shift, and go to state 13

    func_block              go to state 53
    elements                go to state 54
    element                 go to state 20
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 32


State 18

    7 func_blocks: func_block .

    $default  reduce using rule 7 (func_blocks)


State 19

    2 blocks: elements .
   12 elements: elements . element

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    DOUBLE      shift, and go to state 10
    STRING      shift, and go to state 11
    SEMICOLON   shift, and go to state 13

    $default  reduce using rule 2 (blocks)

    element                 go to state 55
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 20

   13 elements: element .

    $default  reduce using rule 13 (elements)


State 21

   14 element: element_content . eols
   15        | element_content . END

    END  shift, and go to state 57
    EOL  shift, and go to state 14

    eols  go to state 58


State 22

   16 element_content: declaration .

    $default  reduce using rule 16 (element_content)


State 23

   30 declaration: declaration_subst_calc .

    $default  reduce using rule 30 (declaration)


State 24

   17 element_content: input_output .

    $default  reduce using rule 17 (element_content)


State 25

   33 input_output: outputs .
   34 outputs: outputs . OUTPUT expression
   35        | outputs . OUTPUT STRINGLITERAL

    OUTPUT  shift, and go to state 59

    $default  reduce using rule 33 (input_output)


State 26

   38 identifiers: identifiers . COMMA IDENTIFIER
   39            | identifiers . COMMA IDENTIFIER DOT DOUBLELITERAL
   40            | identifiers . COMMA IDENTIFIER DOT IDENTIFIER
   44 subst_calc: identifiers . SUBST expression
   45           | identifiers . SUBST STRINGLITERAL
   46 subst_calc_2: identifiers . ADD_SUBST expression
   47             | identifiers . SUBT_SUBST expression
   48             | identifiers . MULT_SUBST expression
   49             | identifiers . DIV_SUBST expression

    SUBST       shift, and go to state 60
    ADD_SUBST   shift, and go to state 61
    SUBT_SUBST  shift, and go to state 62
    MULT_SUBST  shift, and go to state 63
    DIV_SUBST   shift, and go to state 64
    COMMA       shift, and go to state 65


State 27

   18 element_content: subst_calc .

    $default  reduce using rule 18 (element_content)


State 28

   19 element_content: subst_calc_2 .

    $default  reduce using rule 19 (element_content)


State 29

   20 element_content: if_stmt .

    $default  reduce using rule 20 (element_content)


State 30

   22 element_content: for_stmt .

    $default  reduce using rule 22 (element_content)


State 31

   27 element_content: func_exe .

    $default  reduce using rule 27 (element_content)


State 32

    8 func_block: types . IDENTIFIER LEFT_PAREN args RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols
    9           | types . IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols
   29 declaration: types . identifiers
   31 declaration_subst_calc: types . subst_calc

    IDENTIFIER  shift, and go to state 66

    identifiers  go to state 67
    subst_calc   go to state 68


State 33

    3 blocks: eols . elements
    5       | eols . func_blocks elements
   89 eols: eols . EOL

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    DOUBLE      shift, and go to state 10
    STRING      shift, and go to state 11
    VOID        shift, and go to state 12
    SEMICOLON   shift, and go to state 13
    EOL         shift, and go to state 69

    func_blocks             go to state 70
    func_block              go to state 18
    elements                go to state 71
    element                 go to state 20
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 32


State 34

   42 identifiers: IDENTIFIER DOT . DOUBLELITERAL
   43            | IDENTIFIER DOT . IDENTIFIER

    DOUBLELITERAL  shift, and go to state 72
    IDENTIFIER     shift, and go to state 73


State 35

   83 func_exe: IDENTIFIER LEFT_PAREN . identifiers RIGHT_PAREN
   84         | IDENTIFIER LEFT_PAREN . RIGHT_PAREN

    IDENTIFIER   shift, and go to state 44
    RIGHT_PAREN  shift, and go to state 74

    identifiers  go to state 75


State 36

   65 monomial: DOUBLELITERAL .

    $default  reduce using rule 65 (monomial)


State 37

   26 element_content: RETURN STRINGLITERAL .

    $default  reduce using rule 26 (element_content)


State 38

   66 monomial: IDENTIFIER .
   67         | IDENTIFIER . DOT DOUBLELITERAL
   68         | IDENTIFIER . DOT IDENTIFIER
   83 func_exe: IDENTIFIER . LEFT_PAREN identifiers RIGHT_PAREN
   84         | IDENTIFIER . LEFT_PAREN RIGHT_PAREN

    DOT         shift, and go to state 76
    LEFT_PAREN  shift, and go to state 35

    $default  reduce using rule 66 (monomial)


State 39

   63 expression: MINUS . expression

    DOUBLELITERAL  shift, and go to state 36
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 77
    monomial    go to state 42
    func_exe    go to state 43


State 40

   64 expression: LEFT_PAREN . expression RIGHT_PAREN

    DOUBLELITERAL  shift, and go to state 36
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 78
    monomial    go to state 42
    func_exe    go to state 43


State 41

   25 element_content: RETURN expression .
   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   52           | expression . MULT expression
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   59           | expression . LESS expression
   60           | expression . AND expression
   61           | expression . OR expression

    EQUAL       shift, and go to state 79
    NOT_EQUAL   shift, and go to state 80
    MORE_EQUAL  shift, and go to state 81
    LESS_EQUAL  shift, and go to state 82
    MORE        shift, and go to state 83
    LESS        shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    MULT        shift, and go to state 87
    DIV         shift, and go to state 88
    AND         shift, and go to state 89
    OR          shift, and go to state 90

    $default  reduce using rule 25 (element_content)


State 42

   62 expression: monomial .

    $default  reduce using rule 62 (expression)


State 43

   69 monomial: func_exe .

    $default  reduce using rule 69 (monomial)


State 44

   41 identifiers: IDENTIFIER .
   42            | IDENTIFIER . DOT DOUBLELITERAL
   43            | IDENTIFIER . DOT IDENTIFIER

    DOT  shift, and go to state 34

    $default  reduce using rule 41 (identifiers)


State 45

   32 input_output: INPUT identifiers .
   38 identifiers: identifiers . COMMA IDENTIFIER
   39            | identifiers . COMMA IDENTIFIER DOT DOUBLELITERAL
   40            | identifiers . COMMA IDENTIFIER DOT IDENTIFIER

    COMMA  shift, and go to state 65

    $default  reduce using rule 32 (input_output)


State 46

   37 outputs: OUTPUT STRINGLITERAL .

    $default  reduce using rule 37 (outputs)


State 47

   36 outputs: OUTPUT expression .
   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   52           | expression . MULT expression
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   59           | expression . LESS expression
   60           | expression . AND expression
   61           | expression . OR expression

    EQUAL       shift, and go to state 79
    NOT_EQUAL   shift, and go to state 80
    MORE_EQUAL  shift, and go to state 81
    LESS_EQUAL  shift, and go to state 82
    MORE        shift, and go to state 83
    LESS        shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    MULT        shift, and go to state 87
    DIV         shift, and go to state 88
    AND         shift, and go to state 89
    OR          shift, and go to state 90

    $default  reduce using rule 36 (outputs)


State 48

   70 if_stmt: IF LEFT_PAREN . expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   71        | IF LEFT_PAREN . expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   72        | IF LEFT_PAREN . expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACKET
   73        | IF LEFT_PAREN . expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET

    DOUBLELITERAL  shift, and go to state 36
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 91
    monomial    go to state 42
    func_exe    go to state 43


State 49

   77 for_stmt: FOR LEFT_PAREN . declaration_subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   78         | FOR LEFT_PAREN . declaration_subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   79         | FOR LEFT_PAREN . subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   80         | FOR LEFT_PAREN . subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   81         | FOR LEFT_PAREN . subst_calc_2 COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   82         | FOR LEFT_PAREN . subst_calc_2 COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    IDENTIFIER  shift, and go to state 44
    DOUBLE      shift, and go to state 10
    STRING      shift, and go to state 11

    declaration_subst_calc  go to state 92
    identifiers             go to state 26
    subst_calc              go to state 93
    subst_calc_2            go to state 94
    types                   go to state 95


State 50

   21 element_content: WHILE LEFT_PAREN . expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    DOUBLELITERAL  shift, and go to state 36
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 96
    monomial    go to state 42
    func_exe    go to state 43


State 51

   10 func_block: VOID IDENTIFIER . LEFT_PAREN args RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols
   11           | VOID IDENTIFIER . LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols

    LEFT_PAREN  shift, and go to state 97


State 52

    0 $accept: program END .

    $default  accept


State 53

    6 func_blocks: func_blocks func_block .

    $default  reduce using rule 6 (func_blocks)


State 54

    4 blocks: func_blocks elements .
   12 elements: elements . element

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    DOUBLE      shift, and go to state 10
    STRING      shift, and go to state 11
    SEMICOLON   shift, and go to state 13

    $default  reduce using rule 4 (blocks)

    element                 go to state 55
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 55

   12 elements: elements element .

    $default  reduce using rule 12 (elements)


State 56

   29 declaration: types . identifiers
   31 declaration_subst_calc: types . subst_calc

    IDENTIFIER  shift, and go to state 44

    identifiers  go to state 67
    subst_calc   go to state 68


State 57

   15 element: element_content END .

    $default  reduce using rule 15 (element)


State 58

   14 element: element_content eols .
   89 eols: eols . EOL

    EOL  shift, and go to state 69

    $default  reduce using rule 14 (element)


State 59

   34 outputs: outputs OUTPUT . expression
   35        | outputs OUTPUT . STRINGLITERAL

    DOUBLELITERAL  shift, and go to state 36
    STRINGLITERAL  shift, and go to state 98
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 99
    monomial    go to state 42
    func_exe    go to state 43


State 60

   44 subst_calc: identifiers SUBST . expression
   45           | identifiers SUBST . STRINGLITERAL

    DOUBLELITERAL  shift, and go to state 36
    STRINGLITERAL  shift, and go to state 100
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 101
    monomial    go to state 42
    func_exe    go to state 43


State 61

   46 subst_calc_2: identifiers ADD_SUBST . expression

    DOUBLELITERAL  shift, and go to state 36
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 102
    monomial    go to state 42
    func_exe    go to state 43


State 62

   47 subst_calc_2: identifiers SUBT_SUBST . expression

    DOUBLELITERAL  shift, and go to state 36
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 103
    monomial    go to state 42
    func_exe    go to state 43


State 63

   48 subst_calc_2: identifiers MULT_SUBST . expression

    DOUBLELITERAL  shift, and go to state 36
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 104
    monomial    go to state 42
    func_exe    go to state 43


State 64

   49 subst_calc_2: identifiers DIV_SUBST . expression

    DOUBLELITERAL  shift, and go to state 36
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 105
    monomial    go to state 42
    func_exe    go to state 43


State 65

   38 identifiers: identifiers COMMA . IDENTIFIER
   39            | identifiers COMMA . IDENTIFIER DOT DOUBLELITERAL
   40            | identifiers COMMA . IDENTIFIER DOT IDENTIFIER

    IDENTIFIER  shift, and go to state 106


State 66

    8 func_block: types IDENTIFIER . LEFT_PAREN args RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols
    9           | types IDENTIFIER . LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols
   41 identifiers: IDENTIFIER .
   42            | IDENTIFIER . DOT DOUBLELITERAL
   43            | IDENTIFIER . DOT IDENTIFIER

    DOT         shift, and go to state 34
    LEFT_PAREN  shift, and go to state 107

    $default  reduce using rule 41 (identifiers)


State 67

   29 declaration: types identifiers .
   38 identifiers: identifiers . COMMA IDENTIFIER
   39            | identifiers . COMMA IDENTIFIER DOT DOUBLELITERAL
   40            | identifiers . COMMA IDENTIFIER DOT IDENTIFIER
   44 subst_calc: identifiers . SUBST expression
   45           | identifiers . SUBST STRINGLITERAL

    SUBST  shift, and go to state 60
    COMMA  shift, and go to state 65

    $default  reduce using rule 29 (declaration)


State 68

   31 declaration_subst_calc: types subst_calc .

    $default  reduce using rule 31 (declaration_subst_calc)


State 69

   89 eols: eols EOL .

    $default  reduce using rule 89 (eols)


State 70

    5 blocks: eols func_blocks . elements
    6 func_blocks: func_blocks . func_block

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    DOUBLE      shift, and go to state 10
    STRING      shift, and go to state 11
    VOID        shift, and go to state 12
    SEMICOLON   shift, and go to state 13

    func_block              go to state 53
    elements                go to state 108
    element                 go to state 20
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 32


State 71

    3 blocks: eols elements .
   12 elements: elements . element

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    DOUBLE      shift, and go to state 10
    STRING      shift, and go to state 11
    SEMICOLON   shift, and go to state 13

    $default  reduce using rule 3 (blocks)

    element                 go to state 55
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 72

   42 identifiers: IDENTIFIER DOT DOUBLELITERAL .

    $default  reduce using rule 42 (identifiers)


State 73

   43 identifiers: IDENTIFIER DOT IDENTIFIER .

    $default  reduce using rule 43 (identifiers)


State 74

   84 func_exe: IDENTIFIER LEFT_PAREN RIGHT_PAREN .

    $default  reduce using rule 84 (func_exe)


State 75

   38 identifiers: identifiers . COMMA IDENTIFIER
   39            | identifiers . COMMA IDENTIFIER DOT DOUBLELITERAL
   40            | identifiers . COMMA IDENTIFIER DOT IDENTIFIER
   83 func_exe: IDENTIFIER LEFT_PAREN identifiers . RIGHT_PAREN

    COMMA        shift, and go to state 65
    RIGHT_PAREN  shift, and go to state 109


State 76

   67 monomial: IDENTIFIER DOT . DOUBLELITERAL
   68         | IDENTIFIER DOT . IDENTIFIER

    DOUBLELITERAL  shift, and go to state 110
    IDENTIFIER     shift, and go to state 111


State 77

   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   52           | expression . MULT expression
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   59           | expression . LESS expression
   60           | expression . AND expression
   61           | expression . OR expression
   63           | MINUS expression .

    $default  reduce using rule 63 (expression)


State 78

   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   52           | expression . MULT expression
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   59           | expression . LESS expression
   60           | expression . AND expression
   61           | expression . OR expression
   64           | LEFT_PAREN expression . RIGHT_PAREN

    EQUAL        shift, and go to state 79
    NOT_EQUAL    shift, and go to state 80
    MORE_EQUAL   shift, and go to state 81
    LESS_EQUAL   shift, and go to state 82
    MORE         shift, and go to state 83
    LESS         shift, and go to state 84
    PLUS         shift, and go to state 85
    MINUS        shift, and go to state 86
    MULT         shift, and go to state 87
    DIV          shift, and go to state 88
    AND          shift, and go to state 89
    OR           shift, and go to state 90
    RIGHT_PAREN  shift, and go to state 112


State 79

   54 expression: expression EQUAL . expression

    DOUBLELITERAL  shift, and go to state 36
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 113
    monomial    go to state 42
    func_exe    go to state 43


State 80

   55 expression: expression NOT_EQUAL . expression

    DOUBLELITERAL  shift, and go to state 36
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 114
    monomial    go to state 42
    func_exe    go to state 43


State 81

   56 expression: expression MORE_EQUAL . expression

    DOUBLELITERAL  shift, and go to state 36
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 115
    monomial    go to state 42
    func_exe    go to state 43


State 82

   57 expression: expression LESS_EQUAL . expression

    DOUBLELITERAL  shift, and go to state 36
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 116
    monomial    go to state 42
    func_exe    go to state 43


State 83

   58 expression: expression MORE . expression

    DOUBLELITERAL  shift, and go to state 36
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 117
    monomial    go to state 42
    func_exe    go to state 43


State 84

   59 expression: expression LESS . expression

    DOUBLELITERAL  shift, and go to state 36
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 118
    monomial    go to state 42
    func_exe    go to state 43


State 85

   50 expression: expression PLUS . expression

    DOUBLELITERAL  shift, and go to state 36
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 119
    monomial    go to state 42
    func_exe    go to state 43


State 86

   51 expression: expression MINUS . expression

    DOUBLELITERAL  shift, and go to state 36
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 120
    monomial    go to state 42
    func_exe    go to state 43


State 87

   52 expression: expression MULT . expression

    DOUBLELITERAL  shift, and go to state 36
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 121
    monomial    go to state 42
    func_exe    go to state 43


State 88

   53 expression: expression DIV . expression

    DOUBLELITERAL  shift, and go to state 36
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 122
    monomial    go to state 42
    func_exe    go to state 43


State 89

   60 expression: expression AND . expression

    DOUBLELITERAL  shift, and go to state 36
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 123
    monomial    go to state 42
    func_exe    go to state 43


State 90

   61 expression: expression OR . expression

    DOUBLELITERAL  shift, and go to state 36
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 124
    monomial    go to state 42
    func_exe    go to state 43


State 91

   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   52           | expression . MULT expression
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   59           | expression . LESS expression
   60           | expression . AND expression
   61           | expression . OR expression
   70 if_stmt: IF LEFT_PAREN expression . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   71        | IF LEFT_PAREN expression . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   72        | IF LEFT_PAREN expression . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACKET
   73        | IF LEFT_PAREN expression . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET

    EQUAL        shift, and go to state 79
    NOT_EQUAL    shift, and go to state 80
    MORE_EQUAL   shift, and go to state 81
    LESS_EQUAL   shift, and go to state 82
    MORE         shift, and go to state 83
    LESS         shift, and go to state 84
    PLUS         shift, and go to state 85
    MINUS        shift, and go to state 86
    MULT         shift, and go to state 87
    DIV          shift, and go to state 88
    AND          shift, and go to state 89
    OR           shift, and go to state 90
    RIGHT_PAREN  shift, and go to state 125


State 92

   77 for_stmt: FOR LEFT_PAREN declaration_subst_calc . COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   78         | FOR LEFT_PAREN declaration_subst_calc . COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    COMMA  shift, and go to state 126


State 93

   79 for_stmt: FOR LEFT_PAREN subst_calc . COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   80         | FOR LEFT_PAREN subst_calc . COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    COMMA  shift, and go to state 127


State 94

   81 for_stmt: FOR LEFT_PAREN subst_calc_2 . COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   82         | FOR LEFT_PAREN subst_calc_2 . COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    COMMA  shift, and go to state 128


State 95

   31 declaration_subst_calc: types . subst_calc

    IDENTIFIER  shift, and go to state 44

    identifiers  go to state 129
    subst_calc   go to state 68


State 96

   21 element_content: WHILE LEFT_PAREN expression . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   52           | expression . MULT expression
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   59           | expression . LESS expression
   60           | expression . AND expression
   61           | expression . OR expression

    EQUAL        shift, and go to state 79
    NOT_EQUAL    shift, and go to state 80
    MORE_EQUAL   shift, and go to state 81
    LESS_EQUAL   shift, and go to state 82
    MORE         shift, and go to state 83
    LESS         shift, and go to state 84
    PLUS         shift, and go to state 85
    MINUS        shift, and go to state 86
    MULT         shift, and go to state 87
    DIV          shift, and go to state 88
    AND          shift, and go to state 89
    OR           shift, and go to state 90
    RIGHT_PAREN  shift, and go to state 130


State 97

   10 func_block: VOID IDENTIFIER LEFT_PAREN . args RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols
   11           | VOID IDENTIFIER LEFT_PAREN . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols

    RIGHT_PAREN  shift, and go to state 131
    DOUBLE       shift, and go to state 10
    STRING       shift, and go to state 11

    args   go to state 132
    types  go to state 133


State 98

   35 outputs: outputs OUTPUT STRINGLITERAL .

    $default  reduce using rule 35 (outputs)


State 99

   34 outputs: outputs OUTPUT expression .
   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   52           | expression . MULT expression
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   59           | expression . LESS expression
   60           | expression . AND expression
   61           | expression . OR expression

    EQUAL       shift, and go to state 79
    NOT_EQUAL   shift, and go to state 80
    MORE_EQUAL  shift, and go to state 81
    LESS_EQUAL  shift, and go to state 82
    MORE        shift, and go to state 83
    LESS        shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    MULT        shift, and go to state 87
    DIV         shift, and go to state 88
    AND         shift, and go to state 89
    OR          shift, and go to state 90

    $default  reduce using rule 34 (outputs)


State 100

   45 subst_calc: identifiers SUBST STRINGLITERAL .

    $default  reduce using rule 45 (subst_calc)


State 101

   44 subst_calc: identifiers SUBST expression .
   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   52           | expression . MULT expression
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   59           | expression . LESS expression
   60           | expression . AND expression
   61           | expression . OR expression

    EQUAL       shift, and go to state 79
    NOT_EQUAL   shift, and go to state 80
    MORE_EQUAL  shift, and go to state 81
    LESS_EQUAL  shift, and go to state 82
    MORE        shift, and go to state 83
    LESS        shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    MULT        shift, and go to state 87
    DIV         shift, and go to state 88
    AND         shift, and go to state 89
    OR          shift, and go to state 90

    $default  reduce using rule 44 (subst_calc)


State 102

   46 subst_calc_2: identifiers ADD_SUBST expression .
   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   52           | expression . MULT expression
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   59           | expression . LESS expression
   60           | expression . AND expression
   61           | expression . OR expression

    EQUAL       shift, and go to state 79
    NOT_EQUAL   shift, and go to state 80
    MORE_EQUAL  shift, and go to state 81
    LESS_EQUAL  shift, and go to state 82
    MORE        shift, and go to state 83
    LESS        shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    MULT        shift, and go to state 87
    DIV         shift, and go to state 88
    AND         shift, and go to state 89
    OR          shift, and go to state 90

    $default  reduce using rule 46 (subst_calc_2)


State 103

   47 subst_calc_2: identifiers SUBT_SUBST expression .
   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   52           | expression . MULT expression
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   59           | expression . LESS expression
   60           | expression . AND expression
   61           | expression . OR expression

    EQUAL       shift, and go to state 79
    NOT_EQUAL   shift, and go to state 80
    MORE_EQUAL  shift, and go to state 81
    LESS_EQUAL  shift, and go to state 82
    MORE        shift, and go to state 83
    LESS        shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    MULT        shift, and go to state 87
    DIV         shift, and go to state 88
    AND         shift, and go to state 89
    OR          shift, and go to state 90

    $default  reduce using rule 47 (subst_calc_2)


State 104

   48 subst_calc_2: identifiers MULT_SUBST expression .
   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   52           | expression . MULT expression
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   59           | expression . LESS expression
   60           | expression . AND expression
   61           | expression . OR expression

    EQUAL       shift, and go to state 79
    NOT_EQUAL   shift, and go to state 80
    MORE_EQUAL  shift, and go to state 81
    LESS_EQUAL  shift, and go to state 82
    MORE        shift, and go to state 83
    LESS        shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    MULT        shift, and go to state 87
    DIV         shift, and go to state 88
    AND         shift, and go to state 89
    OR          shift, and go to state 90

    $default  reduce using rule 48 (subst_calc_2)


State 105

   49 subst_calc_2: identifiers DIV_SUBST expression .
   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   52           | expression . MULT expression
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   59           | expression . LESS expression
   60           | expression . AND expression
   61           | expression . OR expression

    EQUAL       shift, and go to state 79
    NOT_EQUAL   shift, and go to state 80
    MORE_EQUAL  shift, and go to state 81
    LESS_EQUAL  shift, and go to state 82
    MORE        shift, and go to state 83
    LESS        shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    MULT        shift, and go to state 87
    DIV         shift, and go to state 88
    AND         shift, and go to state 89
    OR          shift, and go to state 90

    $default  reduce using rule 49 (subst_calc_2)


State 106

   38 identifiers: identifiers COMMA IDENTIFIER .
   39            | identifiers COMMA IDENTIFIER . DOT DOUBLELITERAL
   40            | identifiers COMMA IDENTIFIER . DOT IDENTIFIER

    DOT  shift, and go to state 134

    $default  reduce using rule 38 (identifiers)


State 107

    8 func_block: types IDENTIFIER LEFT_PAREN . args RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols
    9           | types IDENTIFIER LEFT_PAREN . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols

    RIGHT_PAREN  shift, and go to state 135
    DOUBLE       shift, and go to state 10
    STRING       shift, and go to state 11

    args   go to state 136
    types  go to state 133


State 108

    5 blocks: eols func_blocks elements .
   12 elements: elements . element

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    DOUBLE      shift, and go to state 10
    STRING      shift, and go to state 11
    SEMICOLON   shift, and go to state 13

    $default  reduce using rule 5 (blocks)

    element                 go to state 55
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 109

   83 func_exe: IDENTIFIER LEFT_PAREN identifiers RIGHT_PAREN .

    $default  reduce using rule 83 (func_exe)


State 110

   67 monomial: IDENTIFIER DOT DOUBLELITERAL .

    $default  reduce using rule 67 (monomial)


State 111

   68 monomial: IDENTIFIER DOT IDENTIFIER .

    $default  reduce using rule 68 (monomial)


State 112

   64 expression: LEFT_PAREN expression RIGHT_PAREN .

    $default  reduce using rule 64 (expression)


State 113

   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   52           | expression . MULT expression
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   54           | expression EQUAL expression .
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   59           | expression . LESS expression
   60           | expression . AND expression
   61           | expression . OR expression

    PLUS   shift, and go to state 85
    MINUS  shift, and go to state 86
    MULT   shift, and go to state 87
    DIV    shift, and go to state 88

    $default  reduce using rule 54 (expression)


State 114

   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   52           | expression . MULT expression
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   55           | expression NOT_EQUAL expression .
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   59           | expression . LESS expression
   60           | expression . AND expression
   61           | expression . OR expression

    PLUS   shift, and go to state 85
    MINUS  shift, and go to state 86
    MULT   shift, and go to state 87
    DIV    shift, and go to state 88

    $default  reduce using rule 55 (expression)


State 115

   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   52           | expression . MULT expression
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   56           | expression MORE_EQUAL expression .
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   59           | expression . LESS expression
   60           | expression . AND expression
   61           | expression . OR expression

    PLUS   shift, and go to state 85
    MINUS  shift, and go to state 86
    MULT   shift, and go to state 87
    DIV    shift, and go to state 88

    $default  reduce using rule 56 (expression)


State 116

   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   52           | expression . MULT expression
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   57           | expression LESS_EQUAL expression .
   58           | expression . MORE expression
   59           | expression . LESS expression
   60           | expression . AND expression
   61           | expression . OR expression

    PLUS   shift, and go to state 85
    MINUS  shift, and go to state 86
    MULT   shift, and go to state 87
    DIV    shift, and go to state 88

    $default  reduce using rule 57 (expression)


State 117

   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   52           | expression . MULT expression
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   58           | expression MORE expression .
   59           | expression . LESS expression
   60           | expression . AND expression
   61           | expression . OR expression

    PLUS   shift, and go to state 85
    MINUS  shift, and go to state 86
    MULT   shift, and go to state 87
    DIV    shift, and go to state 88

    $default  reduce using rule 58 (expression)


State 118

   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   52           | expression . MULT expression
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   59           | expression . LESS expression
   59           | expression LESS expression .
   60           | expression . AND expression
   61           | expression . OR expression

    PLUS   shift, and go to state 85
    MINUS  shift, and go to state 86
    MULT   shift, and go to state 87
    DIV    shift, and go to state 88

    $default  reduce using rule 59 (expression)


State 119

   50 expression: expression . PLUS expression
   50           | expression PLUS expression .
   51           | expression . MINUS expression
   52           | expression . MULT expression
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   59           | expression . LESS expression
   60           | expression . AND expression
   61           | expression . OR expression

    MULT  shift, and go to state 87
    DIV   shift, and go to state 88

    $default  reduce using rule 50 (expression)


State 120

   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   51           | expression MINUS expression .
   52           | expression . MULT expression
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   59           | expression . LESS expression
   60           | expression . AND expression
   61           | expression . OR expression

    MULT  shift, and go to state 87
    DIV   shift, and go to state 88

    $default  reduce using rule 51 (expression)


State 121

   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   52           | expression . MULT expression
   52           | expression MULT expression .
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   59           | expression . LESS expression
   60           | expression . AND expression
   61           | expression . OR expression

    $default  reduce using rule 52 (expression)


State 122

   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   52           | expression . MULT expression
   53           | expression . DIV expression
   53           | expression DIV expression .
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   59           | expression . LESS expression
   60           | expression . AND expression
   61           | expression . OR expression

    $default  reduce using rule 53 (expression)


State 123

   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   52           | expression . MULT expression
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   59           | expression . LESS expression
   60           | expression . AND expression
   60           | expression AND expression .
   61           | expression . OR expression

    EQUAL       shift, and go to state 79
    NOT_EQUAL   shift, and go to state 80
    MORE_EQUAL  shift, and go to state 81
    LESS_EQUAL  shift, and go to state 82
    MORE        shift, and go to state 83
    LESS        shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    MULT        shift, and go to state 87
    DIV         shift, and go to state 88

    $default  reduce using rule 60 (expression)


State 124

   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   52           | expression . MULT expression
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   59           | expression . LESS expression
   60           | expression . AND expression
   61           | expression . OR expression
   61           | expression OR expression .

    EQUAL       shift, and go to state 79
    NOT_EQUAL   shift, and go to state 80
    MORE_EQUAL  shift, and go to state 81
    LESS_EQUAL  shift, and go to state 82
    MORE        shift, and go to state 83
    LESS        shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    MULT        shift, and go to state 87
    DIV         shift, and go to state 88

    $default  reduce using rule 61 (expression)


State 125

   70 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   71        | IF LEFT_PAREN expression RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   72        | IF LEFT_PAREN expression RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACKET
   73        | IF LEFT_PAREN expression RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET

    EOL  shift, and go to state 137


State 126

   77 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA . expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   78         | FOR LEFT_PAREN declaration_subst_calc COMMA . expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    DOUBLELITERAL  shift, and go to state 36
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 138
    monomial    go to state 42
    func_exe    go to state 43


State 127

   79 for_stmt: FOR LEFT_PAREN subst_calc COMMA . expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   80         | FOR LEFT_PAREN subst_calc COMMA . expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    DOUBLELITERAL  shift, and go to state 36
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 139
    monomial    go to state 42
    func_exe    go to state 43


State 128

   81 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA . expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   82         | FOR LEFT_PAREN subst_calc_2 COMMA . expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    DOUBLELITERAL  shift, and go to state 36
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 140
    monomial    go to state 42
    func_exe    go to state 43


State 129

   38 identifiers: identifiers . COMMA IDENTIFIER
   39            | identifiers . COMMA IDENTIFIER DOT DOUBLELITERAL
   40            | identifiers . COMMA IDENTIFIER DOT IDENTIFIER
   44 subst_calc: identifiers . SUBST expression
   45           | identifiers . SUBST STRINGLITERAL

    SUBST  shift, and go to state 60
    COMMA  shift, and go to state 65


State 130

   21 element_content: WHILE LEFT_PAREN expression RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE

    EOL  shift, and go to state 141


State 131

   11 func_block: VOID IDENTIFIER LEFT_PAREN RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE eols

    EOL  shift, and go to state 142


State 132

   10 func_block: VOID IDENTIFIER LEFT_PAREN args . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols
   85 args: args . COMMA types IDENTIFIER

    COMMA        shift, and go to state 143
    RIGHT_PAREN  shift, and go to state 144


State 133

   86 args: types . IDENTIFIER

    IDENTIFIER  shift, and go to state 145


State 134

   39 identifiers: identifiers COMMA IDENTIFIER DOT . DOUBLELITERAL
   40            | identifiers COMMA IDENTIFIER DOT . IDENTIFIER

    DOUBLELITERAL  shift, and go to state 146
    IDENTIFIER     shift, and go to state 147


State 135

    9 func_block: types IDENTIFIER LEFT_PAREN RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE eols

    EOL  shift, and go to state 148


State 136

    8 func_block: types IDENTIFIER LEFT_PAREN args . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols
   85 args: args . COMMA types IDENTIFIER

    COMMA        shift, and go to state 143
    RIGHT_PAREN  shift, and go to state 149


State 137

   70 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACKET
   71        | IF LEFT_PAREN expression RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   72        | IF LEFT_PAREN expression RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACKET
   73        | IF LEFT_PAREN expression RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET

    LEFT_BRACE  shift, and go to state 150


State 138

   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   52           | expression . MULT expression
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   59           | expression . LESS expression
   60           | expression . AND expression
   61           | expression . OR expression
   77 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression . COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   78         | FOR LEFT_PAREN declaration_subst_calc COMMA expression . COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    EQUAL       shift, and go to state 79
    NOT_EQUAL   shift, and go to state 80
    MORE_EQUAL  shift, and go to state 81
    LESS_EQUAL  shift, and go to state 82
    MORE        shift, and go to state 83
    LESS        shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    MULT        shift, and go to state 87
    DIV         shift, and go to state 88
    AND         shift, and go to state 89
    OR          shift, and go to state 90
    COMMA       shift, and go to state 151


State 139

   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   52           | expression . MULT expression
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   59           | expression . LESS expression
   60           | expression . AND expression
   61           | expression . OR expression
   79 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression . COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   80         | FOR LEFT_PAREN subst_calc COMMA expression . COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    EQUAL       shift, and go to state 79
    NOT_EQUAL   shift, and go to state 80
    MORE_EQUAL  shift, and go to state 81
    LESS_EQUAL  shift, and go to state 82
    MORE        shift, and go to state 83
    LESS        shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    MULT        shift, and go to state 87
    DIV         shift, and go to state 88
    AND         shift, and go to state 89
    OR          shift, and go to state 90
    COMMA       shift, and go to state 152


State 140

   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   52           | expression . MULT expression
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   59           | expression . LESS expression
   60           | expression . AND expression
   61           | expression . OR expression
   81 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression . COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   82         | FOR LEFT_PAREN subst_calc_2 COMMA expression . COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    EQUAL       shift, and go to state 79
    NOT_EQUAL   shift, and go to state 80
    MORE_EQUAL  shift, and go to state 81
    LESS_EQUAL  shift, and go to state 82
    MORE        shift, and go to state 83
    LESS        shift, and go to state 84
    PLUS        shift, and go to state 85
    MINUS       shift, and go to state 86
    MULT        shift, and go to state 87
    DIV         shift, and go to state 88
    AND         shift, and go to state 89
    OR          shift, and go to state 90
    COMMA       shift, and go to state 153


State 141

   21 element_content: WHILE LEFT_PAREN expression RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 154


State 142

   11 func_block: VOID IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE eols

    LEFT_BRACE  shift, and go to state 155


State 143

   85 args: args COMMA . types IDENTIFIER

    DOUBLE  shift, and go to state 10
    STRING  shift, and go to state 11

    types  go to state 156


State 144

   10 func_block: VOID IDENTIFIER LEFT_PAREN args RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE eols

    EOL  shift, and go to state 157


State 145

   86 args: types IDENTIFIER .

    $default  reduce using rule 86 (args)


State 146

   39 identifiers: identifiers COMMA IDENTIFIER DOT DOUBLELITERAL .

    $default  reduce using rule 39 (identifiers)


State 147

   40 identifiers: identifiers COMMA IDENTIFIER DOT IDENTIFIER .

    $default  reduce using rule 40 (identifiers)


State 148

    9 func_block: types IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE eols

    LEFT_BRACE  shift, and go to state 158


State 149

    8 func_block: types IDENTIFIER LEFT_PAREN args RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE eols

    EOL  shift, and go to state 159


State 150

   70 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACKET
   71        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   72        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACKET
   73        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET

    EOL  shift, and go to state 160


State 151

   77 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA . subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   78         | FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA . subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    IDENTIFIER  shift, and go to state 44

    identifiers   go to state 26
    subst_calc    go to state 161
    subst_calc_2  go to state 162


State 152

   79 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA . subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   80         | FOR LEFT_PAREN subst_calc COMMA expression COMMA . subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    IDENTIFIER  shift, and go to state 44

    identifiers   go to state 26
    subst_calc    go to state 163
    subst_calc_2  go to state 164


State 153

   81 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA . subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE
   82         | FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA . subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    IDENTIFIER  shift, and go to state 44

    identifiers   go to state 26
    subst_calc    go to state 165
    subst_calc_2  go to state 166


State 154

   21 element_content: WHILE LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE

    EOL  shift, and go to state 167


State 155

   11 func_block: VOID IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE eols

    EOL  shift, and go to state 168


State 156

   85 args: args COMMA types . IDENTIFIER

    IDENTIFIER  shift, and go to state 169


State 157

   10 func_block: VOID IDENTIFIER LEFT_PAREN args RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE eols

    LEFT_BRACE  shift, and go to state 170


State 158

    9 func_block: types IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE eols

    EOL  shift, and go to state 171


State 159

    8 func_block: types IDENTIFIER LEFT_PAREN args RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE eols

    LEFT_BRACE  shift, and go to state 172


State 160

   70 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACKET
   71        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   72        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACKET
   73        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    DOUBLE      shift, and go to state 10
    STRING      shift, and go to state 11
    SEMICOLON   shift, and go to state 13

    elements                go to state 173
    element                 go to state 20
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 161

   77 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    RIGHT_PAREN  shift, and go to state 174


State 162

   78 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc_2 . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    RIGHT_PAREN  shift, and go to state 175


State 163

   79 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    RIGHT_PAREN  shift, and go to state 176


State 164

   80 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc_2 . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    RIGHT_PAREN  shift, and go to state 177


State 165

   81 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    RIGHT_PAREN  shift, and go to state 178


State 166

   82 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc_2 . RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE

    RIGHT_PAREN  shift, and go to state 179


State 167

   21 element_content: WHILE LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    DOUBLE      shift, and go to state 10
    STRING      shift, and go to state 11
    SEMICOLON   shift, and go to state 13

    elements                go to state 180
    element                 go to state 20
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 168

   11 func_block: VOID IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE eols

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    DOUBLE      shift, and go to state 10
    STRING      shift, and go to state 11
    SEMICOLON   shift, and go to state 13

    elements                go to state 181
    element                 go to state 20
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 169

   85 args: args COMMA types IDENTIFIER .

    $default  reduce using rule 85 (args)


State 170

   10 func_block: VOID IDENTIFIER LEFT_PAREN args RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE eols

    EOL  shift, and go to state 182


State 171

    9 func_block: types IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE eols

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    DOUBLE      shift, and go to state 10
    STRING      shift, and go to state 11
    SEMICOLON   shift, and go to state 13

    elements                go to state 183
    element                 go to state 20
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 172

    8 func_block: types IDENTIFIER LEFT_PAREN args RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE eols

    EOL  shift, and go to state 184


State 173

   12 elements: elements . element
   70 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACKET
   71        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   72        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE EOL else_if_stmts RIGHT_BRACKET
   73        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET

    IDENTIFIER     shift, and go to state 1
    RETURN         shift, and go to state 2
    INPUT          shift, and go to state 3
    OUTPUT         shift, and go to state 4
    IF             shift, and go to state 5
    FOR            shift, and go to state 6
    WHILE          shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RIGHT_BRACE    shift, and go to state 185
    RIGHT_BRACKET  shift, and go to state 186
    DOUBLE         shift, and go to state 10
    STRING         shift, and go to state 11
    SEMICOLON      shift, and go to state 13

    element                 go to state 55
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 174

   77 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE

    EOL  shift, and go to state 187


State 175

   78 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE

    EOL  shift, and go to state 188


State 176

   79 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE

    EOL  shift, and go to state 189


State 177

   80 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE

    EOL  shift, and go to state 190


State 178

   81 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE

    EOL  shift, and go to state 191


State 179

   82 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc_2 RIGHT_PAREN . EOL LEFT_BRACE EOL elements RIGHT_BRACE

    EOL  shift, and go to state 192


State 180

   12 elements: elements . element
   21 element_content: WHILE LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE

    IDENTIFIER   shift, and go to state 1
    RETURN       shift, and go to state 2
    INPUT        shift, and go to state 3
    OUTPUT       shift, and go to state 4
    IF           shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    BREAK        shift, and go to state 8
    CONTINUE     shift, and go to state 9
    RIGHT_BRACE  shift, and go to state 193
    DOUBLE       shift, and go to state 10
    STRING       shift, and go to state 11
    SEMICOLON    shift, and go to state 13

    element                 go to state 55
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 181

   11 func_block: VOID IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE eols
   12 elements: elements . element

    IDENTIFIER   shift, and go to state 1
    RETURN       shift, and go to state 2
    INPUT        shift, and go to state 3
    OUTPUT       shift, and go to state 4
    IF           shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    BREAK        shift, and go to state 8
    CONTINUE     shift, and go to state 9
    RIGHT_BRACE  shift, and go to state 194
    DOUBLE       shift, and go to state 10
    STRING       shift, and go to state 11
    SEMICOLON    shift, and go to state 13

    element                 go to state 55
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 182

   10 func_block: VOID IDENTIFIER LEFT_PAREN args RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE eols

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    DOUBLE      shift, and go to state 10
    STRING      shift, and go to state 11
    SEMICOLON   shift, and go to state 13

    elements                go to state 195
    element                 go to state 20
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 183

    9 func_block: types IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE eols
   12 elements: elements . element

    IDENTIFIER   shift, and go to state 1
    RETURN       shift, and go to state 2
    INPUT        shift, and go to state 3
    OUTPUT       shift, and go to state 4
    IF           shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    BREAK        shift, and go to state 8
    CONTINUE     shift, and go to state 9
    RIGHT_BRACE  shift, and go to state 196
    DOUBLE       shift, and go to state 10
    STRING       shift, and go to state 11
    SEMICOLON    shift, and go to state 13

    element                 go to state 55
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 184

    8 func_block: types IDENTIFIER LEFT_PAREN args RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE eols

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    DOUBLE      shift, and go to state 10
    STRING      shift, and go to state 11
    SEMICOLON   shift, and go to state 13

    elements                go to state 197
    element                 go to state 20
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 185

   71 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE . EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   72        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE . EOL else_if_stmts RIGHT_BRACKET
   73        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE . EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET

    EOL  shift, and go to state 198


State 186

   70 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACKET .

    $default  reduce using rule 70 (if_stmt)


State 187

   77 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 199


State 188

   78 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 200


State 189

   79 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 201


State 190

   80 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 202


State 191

   81 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 203


State 192

   82 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL . LEFT_BRACE EOL elements RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 204


State 193

   21 element_content: WHILE LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE .

    $default  reduce using rule 21 (element_content)


State 194

   11 func_block: VOID IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE . eols

    EOL  shift, and go to state 14

    eols  go to state 205


State 195

   10 func_block: VOID IDENTIFIER LEFT_PAREN args RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE eols
   12 elements: elements . element

    IDENTIFIER   shift, and go to state 1
    RETURN       shift, and go to state 2
    INPUT        shift, and go to state 3
    OUTPUT       shift, and go to state 4
    IF           shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    BREAK        shift, and go to state 8
    CONTINUE     shift, and go to state 9
    RIGHT_BRACE  shift, and go to state 206
    DOUBLE       shift, and go to state 10
    STRING       shift, and go to state 11
    SEMICOLON    shift, and go to state 13

    element                 go to state 55
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 196

    9 func_block: types IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE . eols

    EOL  shift, and go to state 14

    eols  go to state 207


State 197

    8 func_block: types IDENTIFIER LEFT_PAREN args RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE eols
   12 elements: elements . element

    IDENTIFIER   shift, and go to state 1
    RETURN       shift, and go to state 2
    INPUT        shift, and go to state 3
    OUTPUT       shift, and go to state 4
    IF           shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    BREAK        shift, and go to state 8
    CONTINUE     shift, and go to state 9
    RIGHT_BRACE  shift, and go to state 208
    DOUBLE       shift, and go to state 10
    STRING       shift, and go to state 11
    SEMICOLON    shift, and go to state 13

    element                 go to state 55
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 198

   71 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL . ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   72        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL . else_if_stmts RIGHT_BRACKET
   73        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL . else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET

    ELSE  shift, and go to state 209

    else_if_stmts  go to state 210
    else_if_stmt   go to state 211


State 199

   77 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE

    EOL  shift, and go to state 212


State 200

   78 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE

    EOL  shift, and go to state 213


State 201

   79 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE

    EOL  shift, and go to state 214


State 202

   80 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE

    EOL  shift, and go to state 215


State 203

   81 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE

    EOL  shift, and go to state 216


State 204

   82 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE . EOL elements RIGHT_BRACE

    EOL  shift, and go to state 217


State 205

   11 func_block: VOID IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols .
   89 eols: eols . EOL

    EOL  shift, and go to state 69

    $default  reduce using rule 11 (func_block)


State 206

   10 func_block: VOID IDENTIFIER LEFT_PAREN args RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE . eols

    EOL  shift, and go to state 14

    eols  go to state 218


State 207

    9 func_block: types IDENTIFIER LEFT_PAREN RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols .
   89 eols: eols . EOL

    EOL  shift, and go to state 69

    $default  reduce using rule 9 (func_block)


State 208

    8 func_block: types IDENTIFIER LEFT_PAREN args RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE . eols

    EOL  shift, and go to state 14

    eols  go to state 219


State 209

   71 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL ELSE . EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   76 else_if_stmt: ELSE . IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements

    IF   shift, and go to state 220
    EOL  shift, and go to state 221


State 210

   72 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts . RIGHT_BRACKET
   73        | IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts . RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   74 else_if_stmts: else_if_stmts . RIGHT_BRACE EOL else_if_stmt

    RIGHT_BRACE    shift, and go to state 222
    RIGHT_BRACKET  shift, and go to state 223


State 211

   75 else_if_stmts: else_if_stmt .

    $default  reduce using rule 75 (else_if_stmts)


State 212

   77 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    DOUBLE      shift, and go to state 10
    STRING      shift, and go to state 11
    SEMICOLON   shift, and go to state 13

    elements                go to state 224
    element                 go to state 20
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 213

   78 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    DOUBLE      shift, and go to state 10
    STRING      shift, and go to state 11
    SEMICOLON   shift, and go to state 13

    elements                go to state 225
    element                 go to state 20
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 214

   79 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    DOUBLE      shift, and go to state 10
    STRING      shift, and go to state 11
    SEMICOLON   shift, and go to state 13

    elements                go to state 226
    element                 go to state 20
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 215

   80 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    DOUBLE      shift, and go to state 10
    STRING      shift, and go to state 11
    SEMICOLON   shift, and go to state 13

    elements                go to state 227
    element                 go to state 20
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 216

   81 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    DOUBLE      shift, and go to state 10
    STRING      shift, and go to state 11
    SEMICOLON   shift, and go to state 13

    elements                go to state 228
    element                 go to state 20
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 217

   82 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL . elements RIGHT_BRACE

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    DOUBLE      shift, and go to state 10
    STRING      shift, and go to state 11
    SEMICOLON   shift, and go to state 13

    elements                go to state 229
    element                 go to state 20
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 218

   10 func_block: VOID IDENTIFIER LEFT_PAREN args RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols .
   89 eols: eols . EOL

    EOL  shift, and go to state 69

    $default  reduce using rule 10 (func_block)


State 219

    8 func_block: types IDENTIFIER LEFT_PAREN args RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE eols .
   89 eols: eols . EOL

    EOL  shift, and go to state 69

    $default  reduce using rule 8 (func_block)


State 220

   76 else_if_stmt: ELSE IF . LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements

    LEFT_PAREN  shift, and go to state 230


State 221

   71 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL ELSE EOL . LEFT_BRACE EOL elements RIGHT_BRACKET

    LEFT_BRACE  shift, and go to state 231


State 222

   73 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE . EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   74 else_if_stmts: else_if_stmts RIGHT_BRACE . EOL else_if_stmt

    EOL  shift, and go to state 232


State 223

   72 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACKET .

    $default  reduce using rule 72 (if_stmt)


State 224

   12 elements: elements . element
   77 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE

    IDENTIFIER   shift, and go to state 1
    RETURN       shift, and go to state 2
    INPUT        shift, and go to state 3
    OUTPUT       shift, and go to state 4
    IF           shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    BREAK        shift, and go to state 8
    CONTINUE     shift, and go to state 9
    RIGHT_BRACE  shift, and go to state 233
    DOUBLE       shift, and go to state 10
    STRING       shift, and go to state 11
    SEMICOLON    shift, and go to state 13

    element                 go to state 55
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 225

   12 elements: elements . element
   78 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE

    IDENTIFIER   shift, and go to state 1
    RETURN       shift, and go to state 2
    INPUT        shift, and go to state 3
    OUTPUT       shift, and go to state 4
    IF           shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    BREAK        shift, and go to state 8
    CONTINUE     shift, and go to state 9
    RIGHT_BRACE  shift, and go to state 234
    DOUBLE       shift, and go to state 10
    STRING       shift, and go to state 11
    SEMICOLON    shift, and go to state 13

    element                 go to state 55
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 226

   12 elements: elements . element
   79 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE

    IDENTIFIER   shift, and go to state 1
    RETURN       shift, and go to state 2
    INPUT        shift, and go to state 3
    OUTPUT       shift, and go to state 4
    IF           shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    BREAK        shift, and go to state 8
    CONTINUE     shift, and go to state 9
    RIGHT_BRACE  shift, and go to state 235
    DOUBLE       shift, and go to state 10
    STRING       shift, and go to state 11
    SEMICOLON    shift, and go to state 13

    element                 go to state 55
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 227

   12 elements: elements . element
   80 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE

    IDENTIFIER   shift, and go to state 1
    RETURN       shift, and go to state 2
    INPUT        shift, and go to state 3
    OUTPUT       shift, and go to state 4
    IF           shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    BREAK        shift, and go to state 8
    CONTINUE     shift, and go to state 9
    RIGHT_BRACE  shift, and go to state 236
    DOUBLE       shift, and go to state 10
    STRING       shift, and go to state 11
    SEMICOLON    shift, and go to state 13

    element                 go to state 55
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 228

   12 elements: elements . element
   81 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE

    IDENTIFIER   shift, and go to state 1
    RETURN       shift, and go to state 2
    INPUT        shift, and go to state 3
    OUTPUT       shift, and go to state 4
    IF           shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    BREAK        shift, and go to state 8
    CONTINUE     shift, and go to state 9
    RIGHT_BRACE  shift, and go to state 237
    DOUBLE       shift, and go to state 10
    STRING       shift, and go to state 11
    SEMICOLON    shift, and go to state 13

    element                 go to state 55
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 229

   12 elements: elements . element
   82 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements . RIGHT_BRACE

    IDENTIFIER   shift, and go to state 1
    RETURN       shift, and go to state 2
    INPUT        shift, and go to state 3
    OUTPUT       shift, and go to state 4
    IF           shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    BREAK        shift, and go to state 8
    CONTINUE     shift, and go to state 9
    RIGHT_BRACE  shift, and go to state 238
    DOUBLE       shift, and go to state 10
    STRING       shift, and go to state 11
    SEMICOLON    shift, and go to state 13

    element                 go to state 55
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 230

   76 else_if_stmt: ELSE IF LEFT_PAREN . expression RIGHT_PAREN EOL LEFT_BRACE EOL elements

    DOUBLELITERAL  shift, and go to state 36
    IDENTIFIER     shift, and go to state 38
    MINUS          shift, and go to state 39
    LEFT_PAREN     shift, and go to state 40

    expression  go to state 239
    monomial    go to state 42
    func_exe    go to state 43


State 231

   71 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL ELSE EOL LEFT_BRACE . EOL elements RIGHT_BRACKET

    EOL  shift, and go to state 240


State 232

   73 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL . ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   74 else_if_stmts: else_if_stmts RIGHT_BRACE EOL . else_if_stmt

    ELSE  shift, and go to state 241

    else_if_stmt  go to state 242


State 233

   77 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE .

    $default  reduce using rule 77 (for_stmt)


State 234

   78 for_stmt: FOR LEFT_PAREN declaration_subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE .

    $default  reduce using rule 78 (for_stmt)


State 235

   79 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE .

    $default  reduce using rule 79 (for_stmt)


State 236

   80 for_stmt: FOR LEFT_PAREN subst_calc COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE .

    $default  reduce using rule 80 (for_stmt)


State 237

   81 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE .

    $default  reduce using rule 81 (for_stmt)


State 238

   82 for_stmt: FOR LEFT_PAREN subst_calc_2 COMMA expression COMMA subst_calc_2 RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE .

    $default  reduce using rule 82 (for_stmt)


State 239

   50 expression: expression . PLUS expression
   51           | expression . MINUS expression
   52           | expression . MULT expression
   53           | expression . DIV expression
   54           | expression . EQUAL expression
   55           | expression . NOT_EQUAL expression
   56           | expression . MORE_EQUAL expression
   57           | expression . LESS_EQUAL expression
   58           | expression . MORE expression
   59           | expression . LESS expression
   60           | expression . AND expression
   61           | expression . OR expression
   76 else_if_stmt: ELSE IF LEFT_PAREN expression . RIGHT_PAREN EOL LEFT_BRACE EOL elements

    EQUAL        shift, and go to state 79
    NOT_EQUAL    shift, and go to state 80
    MORE_EQUAL   shift, and go to state 81
    LESS_EQUAL   shift, and go to state 82
    MORE         shift, and go to state 83
    LESS         shift, and go to state 84
    PLUS         shift, and go to state 85
    MINUS        shift, and go to state 86
    MULT         shift, and go to state 87
    DIV          shift, and go to state 88
    AND          shift, and go to state 89
    OR           shift, and go to state 90
    RIGHT_PAREN  shift, and go to state 243


State 240

   71 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL . elements RIGHT_BRACKET

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    DOUBLE      shift, and go to state 10
    STRING      shift, and go to state 11
    SEMICOLON   shift, and go to state 13

    elements                go to state 244
    element                 go to state 20
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 241

   73 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE . EOL LEFT_BRACE EOL elements RIGHT_BRACKET
   76 else_if_stmt: ELSE . IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements

    IF   shift, and go to state 220
    EOL  shift, and go to state 245


State 242

   74 else_if_stmts: else_if_stmts RIGHT_BRACE EOL else_if_stmt .

    $default  reduce using rule 74 (else_if_stmts)


State 243

   76 else_if_stmt: ELSE IF LEFT_PAREN expression RIGHT_PAREN . EOL LEFT_BRACE EOL elements

    EOL  shift, and go to state 246


State 244

   12 elements: elements . element
   71 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements . RIGHT_BRACKET

    IDENTIFIER     shift, and go to state 1
    RETURN         shift, and go to state 2
    INPUT          shift, and go to state 3
    OUTPUT         shift, and go to state 4
    IF             shift, and go to state 5
    FOR            shift, and go to state 6
    WHILE          shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RIGHT_BRACKET  shift, and go to state 247
    DOUBLE         shift, and go to state 10
    STRING         shift, and go to state 11
    SEMICOLON      shift, and go to state 13

    element                 go to state 55
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 245

   73 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL . LEFT_BRACE EOL elements RIGHT_BRACKET

    LEFT_BRACE  shift, and go to state 248


State 246

   76 else_if_stmt: ELSE IF LEFT_PAREN expression RIGHT_PAREN EOL . LEFT_BRACE EOL elements

    LEFT_BRACE  shift, and go to state 249


State 247

   71 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET .

    $default  reduce using rule 71 (if_stmt)


State 248

   73 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE . EOL elements RIGHT_BRACKET

    EOL  shift, and go to state 250


State 249

   76 else_if_stmt: ELSE IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE . EOL elements

    EOL  shift, and go to state 251


State 250

   73 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL . elements RIGHT_BRACKET

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    DOUBLE      shift, and go to state 10
    STRING      shift, and go to state 11
    SEMICOLON   shift, and go to state 13

    elements                go to state 252
    element                 go to state 20
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 251

   76 else_if_stmt: ELSE IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL . elements

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    DOUBLE      shift, and go to state 10
    STRING      shift, and go to state 11
    SEMICOLON   shift, and go to state 13

    elements                go to state 253
    element                 go to state 20
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 252

   12 elements: elements . element
   73 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements . RIGHT_BRACKET

    IDENTIFIER     shift, and go to state 1
    RETURN         shift, and go to state 2
    INPUT          shift, and go to state 3
    OUTPUT         shift, and go to state 4
    IF             shift, and go to state 5
    FOR            shift, and go to state 6
    WHILE          shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RIGHT_BRACKET  shift, and go to state 254
    DOUBLE         shift, and go to state 10
    STRING         shift, and go to state 11
    SEMICOLON      shift, and go to state 13

    element                 go to state 55
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 253

   12 elements: elements . element
   76 else_if_stmt: ELSE IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements .

    IDENTIFIER  shift, and go to state 1
    RETURN      shift, and go to state 2
    INPUT       shift, and go to state 3
    OUTPUT      shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    BREAK       shift, and go to state 8
    CONTINUE    shift, and go to state 9
    DOUBLE      shift, and go to state 10
    STRING      shift, and go to state 11
    SEMICOLON   shift, and go to state 13

    $default  reduce using rule 76 (else_if_stmt)

    element                 go to state 55
    element_content         go to state 21
    declaration             go to state 22
    declaration_subst_calc  go to state 23
    input_output            go to state 24
    outputs                 go to state 25
    identifiers             go to state 26
    subst_calc              go to state 27
    subst_calc_2            go to state 28
    if_stmt                 go to state 29
    for_stmt                go to state 30
    func_exe                go to state 31
    types                   go to state 56


State 254

   73 if_stmt: IF LEFT_PAREN expression RIGHT_PAREN EOL LEFT_BRACE EOL elements RIGHT_BRACE EOL else_if_stmts RIGHT_BRACE EOL ELSE EOL LEFT_BRACE EOL elements RIGHT_BRACKET .

    $default  reduce using rule 73 (if_stmt)
